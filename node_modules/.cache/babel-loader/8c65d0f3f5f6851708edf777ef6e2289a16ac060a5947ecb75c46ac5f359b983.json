{"ast":null,"code":"import _regeneratorRuntime from \"/Users/thienantran/Downloads/chatter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/thienantran/Downloads/chatter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/thienantran/Downloads/chatter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _asyncToGenerator from \"/Users/thienantran/Downloads/chatter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport firebase from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport { Component } from '@firebase/component';\nimport { isBrowserExtension, getUA, isReactNative, isNode, isIndexedDBAvailable, isIE, FirebaseError } from '@firebase/util';\nvar name = \"@firebase/auth-compat\";\nvar version = \"0.4.6\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\nfunction _getCurrentScheme() {\n  var _a;\n  return ((_a = self === null || self === void 0 ? void 0 : self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;\n}\n/**\r\n * @return {boolean} Whether the current environment is http or https.\r\n */\nfunction _isHttpOrHttps() {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n/**\r\n * @param {?string=} ua The user agent.\r\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\r\n *     Cordova environment.\r\n */\nfunction _isAndroidOrIosCordovaScheme() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return !!((_getCurrentScheme() === 'file:' || _getCurrentScheme() === 'ionic:' || _getCurrentScheme() === 'capacitor:') && ua.toLowerCase().match(/iphone|ipad|ipod|android/));\n}\n/**\r\n * @return {boolean} Whether the environment is a native environment, where\r\n *     CORS checks do not apply.\r\n */\nfunction _isNativeEnvironment() {\n  return isReactNative() || isNode();\n}\n/**\r\n * Checks whether the user agent is IE11.\r\n * @return {boolean} True if it is IE11.\r\n */\nfunction _isIe11() {\n  return isIE() && (document === null || document === void 0 ? void 0 : document.documentMode) === 11;\n}\n/**\r\n * Checks whether the user agent is Edge.\r\n * @param {string} userAgent The browser user agent string.\r\n * @return {boolean} True if it is Edge.\r\n */\nfunction _isEdge() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return /Edge\\/\\d+/.test(ua);\n}\n/**\r\n * @param {?string=} opt_userAgent The navigator user agent.\r\n * @return {boolean} Whether local storage is not synchronized between an iframe\r\n *     and a popup of the same domain.\r\n */\nfunction _isLocalStorageNotSynchronized() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return _isIe11() || _isEdge(ua);\n}\n/** @return {boolean} Whether web storage is supported. */\nfunction _isWebStorageSupported() {\n  try {\n    var storage = self.localStorage;\n    var key = exp._generateEventId();\n    if (storage) {\n      // setItem will throw an exception if we cannot access WebStorage (e.g.,\n      // Safari in private mode).\n      storage['setItem'](key, '1');\n      storage['removeItem'](key);\n      // For browsers where iframe web storage does not synchronize with a popup\n      // of the same domain, indexedDB is used for persistent storage. These\n      // browsers include IE11 and Edge.\n      // Make sure it is supported (IE11 and Edge private mode does not support\n      // that).\n      if (_isLocalStorageNotSynchronized()) {\n        // In such browsers, if indexedDB is not supported, an iframe cannot be\n        // notified of the popup sign in result.\n        return isIndexedDBAvailable();\n      }\n      return true;\n    }\n  } catch (e) {\n    // localStorage is not available from a worker. Test availability of\n    // indexedDB.\n    return _isWorker() && isIndexedDBAvailable();\n  }\n  return false;\n}\n/**\r\n * @param {?Object=} global The optional global scope.\r\n * @return {boolean} Whether current environment is a worker.\r\n */\nfunction _isWorker() {\n  // WorkerGlobalScope only defined in worker environment.\n  return typeof global !== 'undefined' && 'WorkerGlobalScope' in global && 'importScripts' in global;\n}\nfunction _isPopupRedirectSupported() {\n  return (_isHttpOrHttps() || isBrowserExtension() || _isAndroidOrIosCordovaScheme()) &&\n  // React Native with remote debugging reports its location.protocol as\n  // http.\n  !_isNativeEnvironment() &&\n  // Local storage has to be supported for browser popup and redirect\n  // operations to work.\n  _isWebStorageSupported() &&\n  // DOM, popups and redirects are not supported within a worker.\n  !_isWorker();\n}\n/** Quick check that indicates the platform *may* be Cordova */\nfunction _isLikelyCordova() {\n  return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\n}\nfunction _isCordova() {\n  return _isCordova2.apply(this, arguments);\n}\nfunction _isCordova2() {\n  _isCordova2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {\n    return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n      while (1) switch (_context17.prev = _context17.next) {\n        case 0:\n          if (_isLikelyCordova()) {\n            _context17.next = 2;\n            break;\n          }\n          return _context17.abrupt(\"return\", false);\n        case 2:\n          return _context17.abrupt(\"return\", new Promise(function (resolve) {\n            var timeoutId = setTimeout(function () {\n              // We've waited long enough; the telltale Cordova event didn't happen\n              resolve(false);\n            }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\n            document.addEventListener('deviceready', function () {\n              clearTimeout(timeoutId);\n              resolve(true);\n            });\n          }));\n        case 3:\n        case \"end\":\n          return _context17.stop();\n      }\n    }, _callee17);\n  }));\n  return _isCordova2.apply(this, arguments);\n}\nfunction _getSelfWindow() {\n  return typeof window !== 'undefined' ? window : null;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar Persistence = {\n  LOCAL: 'local',\n  NONE: 'none',\n  SESSION: 'session'\n};\nvar _assert$3 = exp._assert;\nvar PERSISTENCE_KEY = 'persistence';\n/**\r\n * Validates that an argument is a valid persistence value. If an invalid type\r\n * is specified, an error is thrown synchronously.\r\n */\nfunction _validatePersistenceArgument(auth, persistence) {\n  _assert$3(Object.values(Persistence).includes(persistence), auth, \"invalid-persistence-type\" /* exp.AuthErrorCode.INVALID_PERSISTENCE */);\n  // Validate if the specified type is supported in the current environment.\n  if (isReactNative()) {\n    // This is only supported in a browser.\n    _assert$3(persistence !== Persistence.SESSION, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\n    return;\n  }\n  if (isNode()) {\n    // Only none is supported in Node.js.\n    _assert$3(persistence === Persistence.NONE, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\n    return;\n  }\n  if (_isWorker()) {\n    // In a worker environment, either LOCAL or NONE are supported.\n    // If indexedDB not supported and LOCAL provided, throw an error\n    _assert$3(persistence === Persistence.NONE || persistence === Persistence.LOCAL && isIndexedDBAvailable(), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\n    return;\n  }\n  // This is restricted by what the browser supports.\n  _assert$3(persistence === Persistence.NONE || _isWebStorageSupported(), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\n}\nfunction _savePersistenceForRedirect(_x) {\n  return _savePersistenceForRedirect2.apply(this, arguments);\n}\nfunction _savePersistenceForRedirect2() {\n  _savePersistenceForRedirect2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(auth) {\n    var session, key;\n    return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n      while (1) switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return auth._initializationPromise;\n        case 2:\n          session = getSessionStorageIfAvailable();\n          key = exp._persistenceKeyName(PERSISTENCE_KEY, auth.config.apiKey, auth.name);\n          if (session) {\n            session.setItem(key, auth._getPersistence());\n          }\n        case 5:\n        case \"end\":\n          return _context18.stop();\n      }\n    }, _callee18);\n  }));\n  return _savePersistenceForRedirect2.apply(this, arguments);\n}\nfunction _getPersistencesFromRedirect(apiKey, appName) {\n  var session = getSessionStorageIfAvailable();\n  if (!session) {\n    return [];\n  }\n  var key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\n  var persistence = session.getItem(key);\n  switch (persistence) {\n    case Persistence.NONE:\n      return [exp.inMemoryPersistence];\n    case Persistence.LOCAL:\n      return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\n    case Persistence.SESSION:\n      return [exp.browserSessionPersistence];\n    default:\n      return [];\n  }\n}\n/** Returns session storage, or null if the property access errors */\nfunction getSessionStorageIfAvailable() {\n  var _a;\n  try {\n    return ((_a = _getSelfWindow()) === null || _a === void 0 ? void 0 : _a.sessionStorage) || null;\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _assert$2 = exp._assert;\n/** Platform-agnostic popup-redirect resolver */\nvar CompatPopupRedirectResolver = /*#__PURE__*/function () {\n  function CompatPopupRedirectResolver() {\n    _classCallCheck(this, CompatPopupRedirectResolver);\n    // Create both resolvers for dynamic resolution later\n    this.browserResolver = exp._getInstance(exp.browserPopupRedirectResolver);\n    this.cordovaResolver = exp._getInstance(exp.cordovaPopupRedirectResolver);\n    // The actual resolver in use: either browserResolver or cordovaResolver.\n    this.underlyingResolver = null;\n    this._redirectPersistence = exp.browserSessionPersistence;\n    this._completeRedirectFn = exp._getRedirectResult;\n    this._overrideRedirectResult = exp._overrideRedirectResult;\n  }\n  _createClass(CompatPopupRedirectResolver, [{\n    key: \"_initialize\",\n    value: function () {\n      var _initialize2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(auth) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.selectUnderlyingResolver();\n            case 2:\n              return _context.abrupt(\"return\", this.assertedUnderlyingResolver._initialize(auth));\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function _initialize(_x2) {\n        return _initialize2.apply(this, arguments);\n      }\n      return _initialize;\n    }()\n  }, {\n    key: \"_openPopup\",\n    value: function () {\n      var _openPopup2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(auth, provider, authType, eventId) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.selectUnderlyingResolver();\n            case 2:\n              return _context2.abrupt(\"return\", this.assertedUnderlyingResolver._openPopup(auth, provider, authType, eventId));\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function _openPopup(_x3, _x4, _x5, _x6) {\n        return _openPopup2.apply(this, arguments);\n      }\n      return _openPopup;\n    }()\n  }, {\n    key: \"_openRedirect\",\n    value: function () {\n      var _openRedirect2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(auth, provider, authType, eventId) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.selectUnderlyingResolver();\n            case 2:\n              return _context3.abrupt(\"return\", this.assertedUnderlyingResolver._openRedirect(auth, provider, authType, eventId));\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function _openRedirect(_x7, _x8, _x9, _x10) {\n        return _openRedirect2.apply(this, arguments);\n      }\n      return _openRedirect;\n    }()\n  }, {\n    key: \"_isIframeWebStorageSupported\",\n    value: function _isIframeWebStorageSupported(auth, cb) {\n      this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\n    }\n  }, {\n    key: \"_originValidation\",\n    value: function _originValidation(auth) {\n      return this.assertedUnderlyingResolver._originValidation(auth);\n    }\n  }, {\n    key: \"_shouldInitProactively\",\n    get: function get() {\n      return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\n    }\n  }, {\n    key: \"assertedUnderlyingResolver\",\n    get: function get() {\n      _assert$2(this.underlyingResolver, \"internal-error\" /* exp.AuthErrorCode.INTERNAL_ERROR */);\n      return this.underlyingResolver;\n    }\n  }, {\n    key: \"selectUnderlyingResolver\",\n    value: function () {\n      var _selectUnderlyingResolver = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var isCordova;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!this.underlyingResolver) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 2:\n              _context4.next = 4;\n              return _isCordova();\n            case 4:\n              isCordova = _context4.sent;\n              this.underlyingResolver = isCordova ? this.cordovaResolver : this.browserResolver;\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function selectUnderlyingResolver() {\n        return _selectUnderlyingResolver.apply(this, arguments);\n      }\n      return selectUnderlyingResolver;\n    }()\n  }]);\n  return CompatPopupRedirectResolver;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction unwrap(object) {\n  return object.unwrap();\n}\nfunction wrapped(object) {\n  return object.wrapped();\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction credentialFromResponse(userCredential) {\n  return credentialFromObject(userCredential);\n}\nfunction attachExtraErrorFields(auth, e) {\n  var _a;\n  // The response contains all fields from the server which may or may not\n  // actually match the underlying type\n  var response = (_a = e.customData) === null || _a === void 0 ? void 0 : _a._tokenResponse;\n  if ((e === null || e === void 0 ? void 0 : e.code) === 'auth/multi-factor-auth-required') {\n    var mfaErr = e;\n    mfaErr.resolver = new MultiFactorResolver(auth, exp.getMultiFactorResolver(auth, e));\n  } else if (response) {\n    var credential = credentialFromObject(e);\n    var credErr = e;\n    if (credential) {\n      credErr.credential = credential;\n      credErr.tenantId = response.tenantId || undefined;\n      credErr.email = response.email || undefined;\n      credErr.phoneNumber = response.phoneNumber || undefined;\n    }\n  }\n}\nfunction credentialFromObject(object) {\n  var _ref = object instanceof FirebaseError ? object.customData : object,\n    _tokenResponse = _ref._tokenResponse;\n  if (!_tokenResponse) {\n    return null;\n  }\n  // Handle phone Auth credential responses, as they have a different format\n  // from other backend responses (i.e. no providerId). This is also only the\n  // case for user credentials (does not work for errors).\n  if (!(object instanceof FirebaseError)) {\n    if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\n      return exp.PhoneAuthProvider.credentialFromResult(object);\n    }\n  }\n  var providerId = _tokenResponse.providerId;\n  // Email and password is not supported as there is no situation where the\n  // server would return the password to the client.\n  if (!providerId || providerId === exp.ProviderId.PASSWORD) {\n    return null;\n  }\n  var provider;\n  switch (providerId) {\n    case exp.ProviderId.GOOGLE:\n      provider = exp.GoogleAuthProvider;\n      break;\n    case exp.ProviderId.FACEBOOK:\n      provider = exp.FacebookAuthProvider;\n      break;\n    case exp.ProviderId.GITHUB:\n      provider = exp.GithubAuthProvider;\n      break;\n    case exp.ProviderId.TWITTER:\n      provider = exp.TwitterAuthProvider;\n      break;\n    default:\n      var oauthIdToken = _tokenResponse.oauthIdToken,\n        oauthAccessToken = _tokenResponse.oauthAccessToken,\n        oauthTokenSecret = _tokenResponse.oauthTokenSecret,\n        pendingToken = _tokenResponse.pendingToken,\n        nonce = _tokenResponse.nonce;\n      if (!oauthAccessToken && !oauthTokenSecret && !oauthIdToken && !pendingToken) {\n        return null;\n      }\n      // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\n      if (pendingToken) {\n        if (providerId.startsWith('saml.')) {\n          return exp.SAMLAuthCredential._create(providerId, pendingToken);\n        } else {\n          // OIDC and non-default providers excluding Twitter.\n          return exp.OAuthCredential._fromParams({\n            providerId: providerId,\n            signInMethod: providerId,\n            pendingToken: pendingToken,\n            idToken: oauthIdToken,\n            accessToken: oauthAccessToken\n          });\n        }\n      }\n      return new exp.OAuthProvider(providerId).credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        rawNonce: nonce\n      });\n  }\n  return object instanceof FirebaseError ? provider.credentialFromError(object) : provider.credentialFromResult(object);\n}\nfunction convertCredential(auth, credentialPromise) {\n  return credentialPromise.catch(function (e) {\n    if (e instanceof FirebaseError) {\n      attachExtraErrorFields(auth, e);\n    }\n    throw e;\n  }).then(function (credential) {\n    var operationType = credential.operationType;\n    var user = credential.user;\n    return {\n      operationType: operationType,\n      credential: credentialFromResponse(credential),\n      additionalUserInfo: exp.getAdditionalUserInfo(credential),\n      user: User.getOrCreate(user)\n    };\n  });\n}\nfunction convertConfirmationResult(_x11, _x12) {\n  return _convertConfirmationResult.apply(this, arguments);\n}\nfunction _convertConfirmationResult() {\n  _convertConfirmationResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(auth, confirmationResultPromise) {\n    var confirmationResultExp;\n    return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n      while (1) switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return confirmationResultPromise;\n        case 2:\n          confirmationResultExp = _context19.sent;\n          return _context19.abrupt(\"return\", {\n            verificationId: confirmationResultExp.verificationId,\n            confirm: function confirm(verificationCode) {\n              return convertCredential(auth, confirmationResultExp.confirm(verificationCode));\n            }\n          });\n        case 4:\n        case \"end\":\n          return _context19.stop();\n      }\n    }, _callee19);\n  }));\n  return _convertConfirmationResult.apply(this, arguments);\n}\nvar MultiFactorResolver = /*#__PURE__*/function () {\n  function MultiFactorResolver(auth, resolver) {\n    _classCallCheck(this, MultiFactorResolver);\n    this.resolver = resolver;\n    this.auth = wrapped(auth);\n  }\n  _createClass(MultiFactorResolver, [{\n    key: \"session\",\n    get: function get() {\n      return this.resolver.session;\n    }\n  }, {\n    key: \"hints\",\n    get: function get() {\n      return this.resolver.hints;\n    }\n  }, {\n    key: \"resolveSignIn\",\n    value: function resolveSignIn(assertion) {\n      return convertCredential(unwrap(this.auth), this.resolver.resolveSignIn(assertion));\n    }\n  }]);\n  return MultiFactorResolver;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar User = /*#__PURE__*/function () {\n  function User(_delegate) {\n    _classCallCheck(this, User);\n    this._delegate = _delegate;\n    this.multiFactor = exp.multiFactor(_delegate);\n  }\n  _createClass(User, [{\n    key: \"delete\",\n    value: function _delete() {\n      return this._delegate.delete();\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      return this._delegate.reload();\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this._delegate.toJSON();\n    }\n  }, {\n    key: \"getIdTokenResult\",\n    value: function getIdTokenResult(forceRefresh) {\n      return this._delegate.getIdTokenResult(forceRefresh);\n    }\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken(forceRefresh) {\n      return this._delegate.getIdToken(forceRefresh);\n    }\n  }, {\n    key: \"linkAndRetrieveDataWithCredential\",\n    value: function linkAndRetrieveDataWithCredential(credential) {\n      return this.linkWithCredential(credential);\n    }\n  }, {\n    key: \"linkWithCredential\",\n    value: function () {\n      var _linkWithCredential = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(credential) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", convertCredential(this.auth, exp.linkWithCredential(this._delegate, credential)));\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function linkWithCredential(_x13) {\n        return _linkWithCredential.apply(this, arguments);\n      }\n      return linkWithCredential;\n    }()\n  }, {\n    key: \"linkWithPhoneNumber\",\n    value: function () {\n      var _linkWithPhoneNumber = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(phoneNumber, applicationVerifier) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", convertConfirmationResult(this.auth, exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier)));\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function linkWithPhoneNumber(_x14, _x15) {\n        return _linkWithPhoneNumber.apply(this, arguments);\n      }\n      return linkWithPhoneNumber;\n    }()\n  }, {\n    key: \"linkWithPopup\",\n    value: function () {\n      var _linkWithPopup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(provider) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", convertCredential(this.auth, exp.linkWithPopup(this._delegate, provider, CompatPopupRedirectResolver)));\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function linkWithPopup(_x16) {\n        return _linkWithPopup.apply(this, arguments);\n      }\n      return linkWithPopup;\n    }()\n  }, {\n    key: \"linkWithRedirect\",\n    value: function () {\n      var _linkWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(provider) {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return _savePersistenceForRedirect(exp._castAuth(this.auth));\n            case 2:\n              return _context8.abrupt(\"return\", exp.linkWithRedirect(this._delegate, provider, CompatPopupRedirectResolver));\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function linkWithRedirect(_x17) {\n        return _linkWithRedirect.apply(this, arguments);\n      }\n      return linkWithRedirect;\n    }()\n  }, {\n    key: \"reauthenticateAndRetrieveDataWithCredential\",\n    value: function reauthenticateAndRetrieveDataWithCredential(credential) {\n      return this.reauthenticateWithCredential(credential);\n    }\n  }, {\n    key: \"reauthenticateWithCredential\",\n    value: function () {\n      var _reauthenticateWithCredential = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(credential) {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              return _context9.abrupt(\"return\", convertCredential(this.auth, exp.reauthenticateWithCredential(this._delegate, credential)));\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function reauthenticateWithCredential(_x18) {\n        return _reauthenticateWithCredential.apply(this, arguments);\n      }\n      return reauthenticateWithCredential;\n    }()\n  }, {\n    key: \"reauthenticateWithPhoneNumber\",\n    value: function reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {\n      return convertConfirmationResult(this.auth, exp.reauthenticateWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\n    }\n  }, {\n    key: \"reauthenticateWithPopup\",\n    value: function reauthenticateWithPopup(provider) {\n      return convertCredential(this.auth, exp.reauthenticateWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\n    }\n  }, {\n    key: \"reauthenticateWithRedirect\",\n    value: function () {\n      var _reauthenticateWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(provider) {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return _savePersistenceForRedirect(exp._castAuth(this.auth));\n            case 2:\n              return _context10.abrupt(\"return\", exp.reauthenticateWithRedirect(this._delegate, provider, CompatPopupRedirectResolver));\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function reauthenticateWithRedirect(_x19) {\n        return _reauthenticateWithRedirect.apply(this, arguments);\n      }\n      return reauthenticateWithRedirect;\n    }()\n  }, {\n    key: \"sendEmailVerification\",\n    value: function sendEmailVerification(actionCodeSettings) {\n      return exp.sendEmailVerification(this._delegate, actionCodeSettings);\n    }\n  }, {\n    key: \"unlink\",\n    value: function () {\n      var _unlink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(providerId) {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return exp.unlink(this._delegate, providerId);\n            case 2:\n              return _context11.abrupt(\"return\", this);\n            case 3:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function unlink(_x20) {\n        return _unlink.apply(this, arguments);\n      }\n      return unlink;\n    }()\n  }, {\n    key: \"updateEmail\",\n    value: function updateEmail(newEmail) {\n      return exp.updateEmail(this._delegate, newEmail);\n    }\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(newPassword) {\n      return exp.updatePassword(this._delegate, newPassword);\n    }\n  }, {\n    key: \"updatePhoneNumber\",\n    value: function updatePhoneNumber(phoneCredential) {\n      return exp.updatePhoneNumber(this._delegate, phoneCredential);\n    }\n  }, {\n    key: \"updateProfile\",\n    value: function updateProfile(profile) {\n      return exp.updateProfile(this._delegate, profile);\n    }\n  }, {\n    key: \"verifyBeforeUpdateEmail\",\n    value: function verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\n      return exp.verifyBeforeUpdateEmail(this._delegate, newEmail, actionCodeSettings);\n    }\n  }, {\n    key: \"emailVerified\",\n    get: function get() {\n      return this._delegate.emailVerified;\n    }\n  }, {\n    key: \"isAnonymous\",\n    get: function get() {\n      return this._delegate.isAnonymous;\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      return this._delegate.metadata;\n    }\n  }, {\n    key: \"phoneNumber\",\n    get: function get() {\n      return this._delegate.phoneNumber;\n    }\n  }, {\n    key: \"providerData\",\n    get: function get() {\n      return this._delegate.providerData;\n    }\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      return this._delegate.refreshToken;\n    }\n  }, {\n    key: \"tenantId\",\n    get: function get() {\n      return this._delegate.tenantId;\n    }\n  }, {\n    key: \"displayName\",\n    get: function get() {\n      return this._delegate.displayName;\n    }\n  }, {\n    key: \"email\",\n    get: function get() {\n      return this._delegate.email;\n    }\n  }, {\n    key: \"photoURL\",\n    get: function get() {\n      return this._delegate.photoURL;\n    }\n  }, {\n    key: \"providerId\",\n    get: function get() {\n      return this._delegate.providerId;\n    }\n  }, {\n    key: \"uid\",\n    get: function get() {\n      return this._delegate.uid;\n    }\n  }, {\n    key: \"auth\",\n    get: function get() {\n      return this._delegate.auth;\n    }\n  }], [{\n    key: \"getOrCreate\",\n    value: function getOrCreate(user) {\n      if (!User.USER_MAP.has(user)) {\n        User.USER_MAP.set(user, new User(user));\n      }\n      return User.USER_MAP.get(user);\n    }\n  }]);\n  return User;\n}(); // Maintain a map so that there's always a 1:1 mapping between new User and\n// legacy compat users\nUser.USER_MAP = new WeakMap();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _assert$1 = exp._assert;\nvar Auth = /*#__PURE__*/function () {\n  function Auth(app, provider) {\n    _classCallCheck(this, Auth);\n    this.app = app;\n    if (provider.isInitialized()) {\n      this._delegate = provider.getImmediate();\n      this.linkUnderlyingAuth();\n      return;\n    }\n    var apiKey = app.options.apiKey;\n    // TODO: platform needs to be determined using heuristics\n    _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\n      appName: app.name\n    });\n    // TODO: platform needs to be determined using heuristics\n    _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\n      appName: app.name\n    });\n    // Only use a popup/redirect resolver in browser environments\n    var resolver = typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\n    this._delegate = provider.initialize({\n      options: {\n        persistence: buildPersistenceHierarchy(apiKey, app.name),\n        popupRedirectResolver: resolver\n      }\n    });\n    this._delegate._updateErrorMap(exp.debugErrorMap);\n    this.linkUnderlyingAuth();\n  }\n  _createClass(Auth, [{\n    key: \"emulatorConfig\",\n    get: function get() {\n      return this._delegate.emulatorConfig;\n    }\n  }, {\n    key: \"currentUser\",\n    get: function get() {\n      if (!this._delegate.currentUser) {\n        return null;\n      }\n      return User.getOrCreate(this._delegate.currentUser);\n    }\n  }, {\n    key: \"languageCode\",\n    get: function get() {\n      return this._delegate.languageCode;\n    },\n    set: function set(languageCode) {\n      this._delegate.languageCode = languageCode;\n    }\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._delegate.settings;\n    }\n  }, {\n    key: \"tenantId\",\n    get: function get() {\n      return this._delegate.tenantId;\n    },\n    set: function set(tid) {\n      this._delegate.tenantId = tid;\n    }\n  }, {\n    key: \"useDeviceLanguage\",\n    value: function useDeviceLanguage() {\n      this._delegate.useDeviceLanguage();\n    }\n  }, {\n    key: \"signOut\",\n    value: function signOut() {\n      return this._delegate.signOut();\n    }\n  }, {\n    key: \"useEmulator\",\n    value: function useEmulator(url, options) {\n      exp.connectAuthEmulator(this._delegate, url, options);\n    }\n  }, {\n    key: \"applyActionCode\",\n    value: function applyActionCode(code) {\n      return exp.applyActionCode(this._delegate, code);\n    }\n  }, {\n    key: \"checkActionCode\",\n    value: function checkActionCode(code) {\n      return exp.checkActionCode(this._delegate, code);\n    }\n  }, {\n    key: \"confirmPasswordReset\",\n    value: function confirmPasswordReset(code, newPassword) {\n      return exp.confirmPasswordReset(this._delegate, code, newPassword);\n    }\n  }, {\n    key: \"createUserWithEmailAndPassword\",\n    value: function () {\n      var _createUserWithEmailAndPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(email, password) {\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              return _context12.abrupt(\"return\", convertCredential(this._delegate, exp.createUserWithEmailAndPassword(this._delegate, email, password)));\n            case 1:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this);\n      }));\n      function createUserWithEmailAndPassword(_x21, _x22) {\n        return _createUserWithEmailAndPassword.apply(this, arguments);\n      }\n      return createUserWithEmailAndPassword;\n    }()\n  }, {\n    key: \"fetchProvidersForEmail\",\n    value: function fetchProvidersForEmail(email) {\n      return this.fetchSignInMethodsForEmail(email);\n    }\n  }, {\n    key: \"fetchSignInMethodsForEmail\",\n    value: function fetchSignInMethodsForEmail(email) {\n      return exp.fetchSignInMethodsForEmail(this._delegate, email);\n    }\n  }, {\n    key: \"isSignInWithEmailLink\",\n    value: function isSignInWithEmailLink(emailLink) {\n      return exp.isSignInWithEmailLink(this._delegate, emailLink);\n    }\n  }, {\n    key: \"getRedirectResult\",\n    value: function () {\n      var _getRedirectResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        var credential;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\n              _context13.next = 3;\n              return exp.getRedirectResult(this._delegate, CompatPopupRedirectResolver);\n            case 3:\n              credential = _context13.sent;\n              if (credential) {\n                _context13.next = 6;\n                break;\n              }\n              return _context13.abrupt(\"return\", {\n                credential: null,\n                user: null\n              });\n            case 6:\n              return _context13.abrupt(\"return\", convertCredential(this._delegate, Promise.resolve(credential)));\n            case 7:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function getRedirectResult() {\n        return _getRedirectResult.apply(this, arguments);\n      }\n      return getRedirectResult;\n    }() // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n    // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\n    // out of autogenerated documentation pages to reduce accidental misuse.\n  }, {\n    key: \"addFrameworkForLogging\",\n    value: function addFrameworkForLogging(framework) {\n      exp.addFrameworkForLogging(this._delegate, framework);\n    }\n  }, {\n    key: \"onAuthStateChanged\",\n    value: function onAuthStateChanged(nextOrObserver, errorFn, completed) {\n      var _wrapObservers = wrapObservers(nextOrObserver, errorFn, completed),\n        next = _wrapObservers.next,\n        error = _wrapObservers.error,\n        complete = _wrapObservers.complete;\n      return this._delegate.onAuthStateChanged(next, error, complete);\n    }\n  }, {\n    key: \"onIdTokenChanged\",\n    value: function onIdTokenChanged(nextOrObserver, errorFn, completed) {\n      var _wrapObservers2 = wrapObservers(nextOrObserver, errorFn, completed),\n        next = _wrapObservers2.next,\n        error = _wrapObservers2.error,\n        complete = _wrapObservers2.complete;\n      return this._delegate.onIdTokenChanged(next, error, complete);\n    }\n  }, {\n    key: \"sendSignInLinkToEmail\",\n    value: function sendSignInLinkToEmail(email, actionCodeSettings) {\n      return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\n    }\n  }, {\n    key: \"sendPasswordResetEmail\",\n    value: function sendPasswordResetEmail(email, actionCodeSettings) {\n      return exp.sendPasswordResetEmail(this._delegate, email, actionCodeSettings || undefined);\n    }\n  }, {\n    key: \"setPersistence\",\n    value: function () {\n      var _setPersistence = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(persistence) {\n        var converted, isIndexedDBFullySupported;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              _validatePersistenceArgument(this._delegate, persistence);\n              _context14.t0 = persistence;\n              _context14.next = _context14.t0 === Persistence.SESSION ? 4 : _context14.t0 === Persistence.LOCAL ? 6 : _context14.t0 === Persistence.NONE ? 11 : 13;\n              break;\n            case 4:\n              converted = exp.browserSessionPersistence;\n              return _context14.abrupt(\"break\", 14);\n            case 6:\n              _context14.next = 8;\n              return exp._getInstance(exp.indexedDBLocalPersistence)._isAvailable();\n            case 8:\n              isIndexedDBFullySupported = _context14.sent;\n              converted = isIndexedDBFullySupported ? exp.indexedDBLocalPersistence : exp.browserLocalPersistence;\n              return _context14.abrupt(\"break\", 14);\n            case 11:\n              converted = exp.inMemoryPersistence;\n              return _context14.abrupt(\"break\", 14);\n            case 13:\n              return _context14.abrupt(\"return\", exp._fail(\"argument-error\" /* exp.AuthErrorCode.ARGUMENT_ERROR */, {\n                appName: this._delegate.name\n              }));\n            case 14:\n              return _context14.abrupt(\"return\", this._delegate.setPersistence(converted));\n            case 15:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this);\n      }));\n      function setPersistence(_x23) {\n        return _setPersistence.apply(this, arguments);\n      }\n      return setPersistence;\n    }()\n  }, {\n    key: \"signInAndRetrieveDataWithCredential\",\n    value: function signInAndRetrieveDataWithCredential(credential) {\n      return this.signInWithCredential(credential);\n    }\n  }, {\n    key: \"signInAnonymously\",\n    value: function signInAnonymously() {\n      return convertCredential(this._delegate, exp.signInAnonymously(this._delegate));\n    }\n  }, {\n    key: \"signInWithCredential\",\n    value: function signInWithCredential(credential) {\n      return convertCredential(this._delegate, exp.signInWithCredential(this._delegate, credential));\n    }\n  }, {\n    key: \"signInWithCustomToken\",\n    value: function signInWithCustomToken(token) {\n      return convertCredential(this._delegate, exp.signInWithCustomToken(this._delegate, token));\n    }\n  }, {\n    key: \"signInWithEmailAndPassword\",\n    value: function signInWithEmailAndPassword(email, password) {\n      return convertCredential(this._delegate, exp.signInWithEmailAndPassword(this._delegate, email, password));\n    }\n  }, {\n    key: \"signInWithEmailLink\",\n    value: function signInWithEmailLink(email, emailLink) {\n      return convertCredential(this._delegate, exp.signInWithEmailLink(this._delegate, email, emailLink));\n    }\n  }, {\n    key: \"signInWithPhoneNumber\",\n    value: function signInWithPhoneNumber(phoneNumber, applicationVerifier) {\n      return convertConfirmationResult(this._delegate, exp.signInWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\n    }\n  }, {\n    key: \"signInWithPopup\",\n    value: function () {\n      var _signInWithPopup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(provider) {\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\n              return _context15.abrupt(\"return\", convertCredential(this._delegate, exp.signInWithPopup(this._delegate, provider, CompatPopupRedirectResolver)));\n            case 2:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this);\n      }));\n      function signInWithPopup(_x24) {\n        return _signInWithPopup.apply(this, arguments);\n      }\n      return signInWithPopup;\n    }()\n  }, {\n    key: \"signInWithRedirect\",\n    value: function () {\n      var _signInWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(provider) {\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\n              _context16.next = 3;\n              return _savePersistenceForRedirect(this._delegate);\n            case 3:\n              return _context16.abrupt(\"return\", exp.signInWithRedirect(this._delegate, provider, CompatPopupRedirectResolver));\n            case 4:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n      function signInWithRedirect(_x25) {\n        return _signInWithRedirect.apply(this, arguments);\n      }\n      return signInWithRedirect;\n    }()\n  }, {\n    key: \"updateCurrentUser\",\n    value: function updateCurrentUser(user) {\n      // remove ts-ignore once overloads are defined for exp functions to accept compat objects\n      // @ts-ignore\n      return this._delegate.updateCurrentUser(user);\n    }\n  }, {\n    key: \"verifyPasswordResetCode\",\n    value: function verifyPasswordResetCode(code) {\n      return exp.verifyPasswordResetCode(this._delegate, code);\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      return this._delegate;\n    }\n  }, {\n    key: \"_delete\",\n    value: function _delete() {\n      return this._delegate._delete();\n    }\n  }, {\n    key: \"linkUnderlyingAuth\",\n    value: function linkUnderlyingAuth() {\n      var _this = this;\n      this._delegate.wrapped = function () {\n        return _this;\n      };\n    }\n  }]);\n  return Auth;\n}();\nAuth.Persistence = Persistence;\nfunction wrapObservers(nextOrObserver, error, complete) {\n  var next = nextOrObserver;\n  if (typeof nextOrObserver !== 'function') {\n    next = nextOrObserver.next;\n    error = nextOrObserver.error;\n    complete = nextOrObserver.complete;\n  }\n  // We know 'next' is now a function\n  var oldNext = next;\n  var newNext = function newNext(user) {\n    return oldNext(user && User.getOrCreate(user));\n  };\n  return {\n    next: newNext,\n    error: error,\n    complete: complete\n  };\n}\nfunction buildPersistenceHierarchy(apiKey, appName) {\n  // Note this is slightly different behavior: in this case, the stored\n  // persistence is checked *first* rather than last. This is because we want\n  // to prefer stored persistence type in the hierarchy. This is an empty\n  // array if window is not available or there is no pending redirect\n  var persistences = _getPersistencesFromRedirect(apiKey, appName);\n  // If \"self\" is available, add indexedDB\n  if (typeof self !== 'undefined' && !persistences.includes(exp.indexedDBLocalPersistence)) {\n    persistences.push(exp.indexedDBLocalPersistence);\n  }\n  // If \"window\" is available, add HTML Storage persistences\n  if (typeof window !== 'undefined') {\n    for (var _i = 0, _arr = [exp.browserLocalPersistence, exp.browserSessionPersistence]; _i < _arr.length; _i++) {\n      var persistence = _arr[_i];\n      if (!persistences.includes(persistence)) {\n        persistences.push(persistence);\n      }\n    }\n  }\n  // Add in-memory as a final fallback\n  if (!persistences.includes(exp.inMemoryPersistence)) {\n    persistences.push(exp.inMemoryPersistence);\n  }\n  return persistences;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PhoneAuthProvider = /*#__PURE__*/function () {\n  function PhoneAuthProvider() {\n    _classCallCheck(this, PhoneAuthProvider);\n    this.providerId = 'phone';\n    // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n    this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth()));\n  }\n  _createClass(PhoneAuthProvider, [{\n    key: \"verifyPhoneNumber\",\n    value: function verifyPhoneNumber(phoneInfoOptions, applicationVerifier) {\n      return this._delegate.verifyPhoneNumber(\n      // The implementation matches but the types are subtly incompatible\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      phoneInfoOptions, applicationVerifier);\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      return this._delegate;\n    }\n  }], [{\n    key: \"credential\",\n    value: function credential(verificationId, verificationCode) {\n      return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\n    }\n  }]);\n  return PhoneAuthProvider;\n}();\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\nPhoneAuthProvider.PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _assert = exp._assert;\nvar RecaptchaVerifier = /*#__PURE__*/function () {\n  function RecaptchaVerifier(container, parameters) {\n    var app = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : firebase.app();\n    _classCallCheck(this, RecaptchaVerifier);\n    var _a;\n    // API key is required for web client RPC calls.\n    _assert((_a = app.options) === null || _a === void 0 ? void 0 : _a.apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\n      appName: app.name\n    });\n    this._delegate = new exp.RecaptchaVerifier(\n    // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n    app.auth(), container,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    parameters);\n    this.type = this._delegate.type;\n  }\n  _createClass(RecaptchaVerifier, [{\n    key: \"clear\",\n    value: function clear() {\n      this._delegate.clear();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this._delegate.render();\n    }\n  }, {\n    key: \"verify\",\n    value: function verify() {\n      return this._delegate.verify();\n    }\n  }]);\n  return RecaptchaVerifier;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar AUTH_TYPE = 'auth-compat';\n// Create auth components to register with firebase.\n// Provides Auth public APIs.\nfunction registerAuthCompat(instance) {\n  instance.INTERNAL.registerComponent(new Component(AUTH_TYPE, function (container) {\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app-compat').getImmediate();\n    var authProvider = container.getProvider('auth');\n    return new Auth(app, authProvider);\n  }, \"PUBLIC\" /* ComponentType.PUBLIC */).setServiceProps({\n    ActionCodeInfo: {\n      Operation: {\n        EMAIL_SIGNIN: exp.ActionCodeOperation.EMAIL_SIGNIN,\n        PASSWORD_RESET: exp.ActionCodeOperation.PASSWORD_RESET,\n        RECOVER_EMAIL: exp.ActionCodeOperation.RECOVER_EMAIL,\n        REVERT_SECOND_FACTOR_ADDITION: exp.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\n        VERIFY_AND_CHANGE_EMAIL: exp.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n        VERIFY_EMAIL: exp.ActionCodeOperation.VERIFY_EMAIL\n      }\n    },\n    EmailAuthProvider: exp.EmailAuthProvider,\n    FacebookAuthProvider: exp.FacebookAuthProvider,\n    GithubAuthProvider: exp.GithubAuthProvider,\n    GoogleAuthProvider: exp.GoogleAuthProvider,\n    OAuthProvider: exp.OAuthProvider,\n    SAMLAuthProvider: exp.SAMLAuthProvider,\n    PhoneAuthProvider: PhoneAuthProvider,\n    PhoneMultiFactorGenerator: exp.PhoneMultiFactorGenerator,\n    RecaptchaVerifier: RecaptchaVerifier,\n    TwitterAuthProvider: exp.TwitterAuthProvider,\n    Auth: Auth,\n    AuthCredential: exp.AuthCredential,\n    Error: FirebaseError\n  }).setInstantiationMode(\"LAZY\" /* InstantiationMode.LAZY */).setMultipleInstances(false));\n  instance.registerVersion(name, version);\n}\nregisterAuthCompat(firebase);","map":{"version":3,"names":["CORDOVA_ONDEVICEREADY_TIMEOUT_MS","_getCurrentScheme","_a","self","location","protocol","_isHttpOrHttps","_isAndroidOrIosCordovaScheme","ua","arguments","length","undefined","getUA","toLowerCase","match","_isNativeEnvironment","isReactNative","isNode","_isIe11","isIE","document","documentMode","_isEdge","test","_isLocalStorageNotSynchronized","_isWebStorageSupported","storage","localStorage","key","exp","_generateEventId","isIndexedDBAvailable","e","_isWorker","global","_isPopupRedirectSupported","isBrowserExtension","_isLikelyCordova","_isCordova","_isCordova2","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee17","wrap","_callee17$","_context17","prev","next","abrupt","Promise","resolve","timeoutId","setTimeout","addEventListener","clearTimeout","stop","_getSelfWindow","window","Persistence","LOCAL","NONE","SESSION","_assert$3","_assert","PERSISTENCE_KEY","_validatePersistenceArgument","auth","persistence","Object","values","includes","_savePersistenceForRedirect","_x","_savePersistenceForRedirect2","_callee18","session","_callee18$","_context18","_initializationPromise","getSessionStorageIfAvailable","_persistenceKeyName","config","apiKey","name","setItem","_getPersistence","_getPersistencesFromRedirect","appName","getItem","inMemoryPersistence","indexedDBLocalPersistence","browserSessionPersistence","sessionStorage","_assert$2","CompatPopupRedirectResolver","_classCallCheck","browserResolver","_getInstance","browserPopupRedirectResolver","cordovaResolver","cordovaPopupRedirectResolver","underlyingResolver","_redirectPersistence","_completeRedirectFn","_getRedirectResult","_overrideRedirectResult","_createClass","value","_initialize2","_callee","_callee$","_context","selectUnderlyingResolver","assertedUnderlyingResolver","_initialize","_x2","_openPopup2","_callee2","provider","authType","eventId","_callee2$","_context2","_openPopup","_x3","_x4","_x5","_x6","_openRedirect2","_callee3","_callee3$","_context3","_openRedirect","_x7","_x8","_x9","_x10","_isIframeWebStorageSupported","cb","_originValidation","get","_shouldInitProactively","_selectUnderlyingResolver","_callee4","isCordova","_callee4$","_context4","sent","unwrap","object","wrapped","credentialFromResponse","userCredential","credentialFromObject","attachExtraErrorFields","response","customData","_tokenResponse","code","mfaErr","resolver","MultiFactorResolver","getMultiFactorResolver","credential","credErr","tenantId","email","phoneNumber","_ref","FirebaseError","PhoneAuthProvider","credentialFromResult","providerId","ProviderId","PASSWORD","GOOGLE","GoogleAuthProvider","FACEBOOK","FacebookAuthProvider","GITHUB","GithubAuthProvider","TWITTER","TwitterAuthProvider","oauthIdToken","oauthAccessToken","oauthTokenSecret","pendingToken","nonce","startsWith","SAMLAuthCredential","_create","OAuthCredential","_fromParams","signInMethod","idToken","accessToken","OAuthProvider","rawNonce","credentialFromError","convertCredential","credentialPromise","catch","then","operationType","user","additionalUserInfo","getAdditionalUserInfo","User","getOrCreate","convertConfirmationResult","_x11","_x12","_convertConfirmationResult","_callee19","confirmationResultPromise","confirmationResultExp","_callee19$","_context19","verificationId","confirm","verificationCode","hints","resolveSignIn","assertion","_delegate","multiFactor","_delete","delete","reload","toJSON","getIdTokenResult","forceRefresh","getIdToken","linkAndRetrieveDataWithCredential","linkWithCredential","_linkWithCredential","_callee5","_callee5$","_context5","_x13","_linkWithPhoneNumber","_callee6","applicationVerifier","_callee6$","_context6","linkWithPhoneNumber","_x14","_x15","_linkWithPopup","_callee7","_callee7$","_context7","linkWithPopup","_x16","_linkWithRedirect","_callee8","_callee8$","_context8","_castAuth","linkWithRedirect","_x17","reauthenticateAndRetrieveDataWithCredential","reauthenticateWithCredential","_reauthenticateWithCredential","_callee9","_callee9$","_context9","_x18","reauthenticateWithPhoneNumber","reauthenticateWithPopup","_reauthenticateWithRedirect","_callee10","_callee10$","_context10","reauthenticateWithRedirect","_x19","sendEmailVerification","actionCodeSettings","_unlink","_callee11","_callee11$","_context11","unlink","_x20","updateEmail","newEmail","updatePassword","newPassword","updatePhoneNumber","phoneCredential","updateProfile","profile","verifyBeforeUpdateEmail","emailVerified","isAnonymous","metadata","providerData","refreshToken","displayName","photoURL","uid","USER_MAP","has","set","WeakMap","_assert$1","Auth","app","isInitialized","getImmediate","linkUnderlyingAuth","options","initialize","buildPersistenceHierarchy","popupRedirectResolver","_updateErrorMap","debugErrorMap","emulatorConfig","currentUser","languageCode","settings","tid","useDeviceLanguage","signOut","useEmulator","url","connectAuthEmulator","applyActionCode","checkActionCode","confirmPasswordReset","_createUserWithEmailAndPassword","_callee12","password","_callee12$","_context12","createUserWithEmailAndPassword","_x21","_x22","fetchProvidersForEmail","fetchSignInMethodsForEmail","isSignInWithEmailLink","emailLink","_callee13","_callee13$","_context13","getRedirectResult","addFrameworkForLogging","framework","onAuthStateChanged","nextOrObserver","errorFn","completed","_wrapObservers","wrapObservers","error","complete","onIdTokenChanged","_wrapObservers2","sendSignInLinkToEmail","sendPasswordResetEmail","_setPersistence","_callee14","converted","isIndexedDBFullySupported","_callee14$","_context14","t0","_isAvailable","browserLocalPersistence","_fail","setPersistence","_x23","signInAndRetrieveDataWithCredential","signInWithCredential","signInAnonymously","signInWithCustomToken","token","signInWithEmailAndPassword","signInWithEmailLink","signInWithPhoneNumber","_signInWithPopup","_callee15","_callee15$","_context15","signInWithPopup","_x24","_signInWithRedirect","_callee16","_callee16$","_context16","signInWithRedirect","_x25","updateCurrentUser","verifyPasswordResetCode","_this","oldNext","newNext","persistences","push","_i","_arr","firebase","verifyPhoneNumber","phoneInfoOptions","PHONE_SIGN_IN_METHOD","PROVIDER_ID","RecaptchaVerifier","container","parameters","type","clear","render","verify","AUTH_TYPE","registerAuthCompat","instance","INTERNAL","registerComponent","Component","getProvider","authProvider","setServiceProps","ActionCodeInfo","Operation","EMAIL_SIGNIN","ActionCodeOperation","PASSWORD_RESET","RECOVER_EMAIL","REVERT_SECOND_FACTOR_ADDITION","VERIFY_AND_CHANGE_EMAIL","VERIFY_EMAIL","EmailAuthProvider","SAMLAuthProvider","PhoneMultiFactorGenerator","AuthCredential","Error","setInstantiationMode","setMultipleInstances","registerVersion","version"],"sources":["/Users/thienantran/Downloads/chatter/node_modules/@firebase/auth-compat/src/platform.ts","/Users/thienantran/Downloads/chatter/node_modules/@firebase/auth-compat/src/persistence.ts","/Users/thienantran/Downloads/chatter/node_modules/@firebase/auth-compat/src/popup_redirect.ts","/Users/thienantran/Downloads/chatter/node_modules/@firebase/auth-compat/src/wrap.ts","/Users/thienantran/Downloads/chatter/node_modules/@firebase/auth-compat/src/user_credential.ts","/Users/thienantran/Downloads/chatter/node_modules/@firebase/auth-compat/src/user.ts","/Users/thienantran/Downloads/chatter/node_modules/@firebase/auth-compat/src/auth.ts","/Users/thienantran/Downloads/chatter/node_modules/@firebase/auth-compat/src/phone_auth_provider.ts","/Users/thienantran/Downloads/chatter/node_modules/@firebase/auth-compat/src/recaptcha_verifier.ts","/Users/thienantran/Downloads/chatter/node_modules/@firebase/auth-compat/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as impl from '@firebase/auth/internal';\nimport {\n  getUA,\n  isBrowserExtension,\n  isReactNative,\n  isNode,\n  isIE,\n  isIndexedDBAvailable\n} from '@firebase/util';\n\ndeclare global {\n  interface Document {\n    documentMode?: number;\n  }\n}\n\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\n\nfunction _getCurrentScheme(): string | null {\n  return self?.location?.protocol || null;\n}\n\n/**\n * @return {boolean} Whether the current environment is http or https.\n */\nfunction _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\n/**\n * @param {?string=} ua The user agent.\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\n *     Cordova environment.\n */\nexport function _isAndroidOrIosCordovaScheme(ua: string = getUA()): boolean {\n  return !!(\n    (_getCurrentScheme() === 'file:' ||\n      _getCurrentScheme() === 'ionic:' ||\n      _getCurrentScheme() === 'capacitor:') &&\n    ua.toLowerCase().match(/iphone|ipad|ipod|android/)\n  );\n}\n\n/**\n * @return {boolean} Whether the environment is a native environment, where\n *     CORS checks do not apply.\n */\nfunction _isNativeEnvironment(): boolean {\n  return isReactNative() || isNode();\n}\n\n/**\n * Checks whether the user agent is IE11.\n * @return {boolean} True if it is IE11.\n */\nfunction _isIe11(): boolean {\n  return isIE() && document?.documentMode === 11;\n}\n\n/**\n * Checks whether the user agent is Edge.\n * @param {string} userAgent The browser user agent string.\n * @return {boolean} True if it is Edge.\n */\nfunction _isEdge(ua: string = getUA()): boolean {\n  return /Edge\\/\\d+/.test(ua);\n}\n\n/**\n * @param {?string=} opt_userAgent The navigator user agent.\n * @return {boolean} Whether local storage is not synchronized between an iframe\n *     and a popup of the same domain.\n */\nfunction _isLocalStorageNotSynchronized(ua: string = getUA()): boolean {\n  return _isIe11() || _isEdge(ua);\n}\n\n/** @return {boolean} Whether web storage is supported. */\nexport function _isWebStorageSupported(): boolean {\n  try {\n    const storage = self.localStorage;\n    const key = impl._generateEventId();\n    if (storage) {\n      // setItem will throw an exception if we cannot access WebStorage (e.g.,\n      // Safari in private mode).\n      storage['setItem'](key, '1');\n      storage['removeItem'](key);\n      // For browsers where iframe web storage does not synchronize with a popup\n      // of the same domain, indexedDB is used for persistent storage. These\n      // browsers include IE11 and Edge.\n      // Make sure it is supported (IE11 and Edge private mode does not support\n      // that).\n      if (_isLocalStorageNotSynchronized()) {\n        // In such browsers, if indexedDB is not supported, an iframe cannot be\n        // notified of the popup sign in result.\n        return isIndexedDBAvailable();\n      }\n      return true;\n    }\n  } catch (e) {\n    // localStorage is not available from a worker. Test availability of\n    // indexedDB.\n    return _isWorker() && isIndexedDBAvailable();\n  }\n  return false;\n}\n\n/**\n * @param {?Object=} global The optional global scope.\n * @return {boolean} Whether current environment is a worker.\n */\nexport function _isWorker(): boolean {\n  // WorkerGlobalScope only defined in worker environment.\n  return (\n    typeof global !== 'undefined' &&\n    'WorkerGlobalScope' in global &&\n    'importScripts' in global\n  );\n}\n\nexport function _isPopupRedirectSupported(): boolean {\n  return (\n    (_isHttpOrHttps() ||\n      isBrowserExtension() ||\n      _isAndroidOrIosCordovaScheme()) &&\n    // React Native with remote debugging reports its location.protocol as\n    // http.\n    !_isNativeEnvironment() &&\n    // Local storage has to be supported for browser popup and redirect\n    // operations to work.\n    _isWebStorageSupported() &&\n    // DOM, popups and redirects are not supported within a worker.\n    !_isWorker()\n  );\n}\n\n/** Quick check that indicates the platform *may* be Cordova */\nexport function _isLikelyCordova(): boolean {\n  return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\n}\n\nexport async function _isCordova(): Promise<boolean> {\n  if (!_isLikelyCordova()) {\n    return false;\n  }\n\n  return new Promise(resolve => {\n    const timeoutId = setTimeout(() => {\n      // We've waited long enough; the telltale Cordova event didn't happen\n      resolve(false);\n    }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\n\n    document.addEventListener('deviceready', () => {\n      clearTimeout(timeoutId);\n      resolve(true);\n    });\n  });\n}\n\nexport function _getSelfWindow(): Window | null {\n  return typeof window !== 'undefined' ? window : null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport { isIndexedDBAvailable, isNode, isReactNative } from '@firebase/util';\nimport { _getSelfWindow, _isWebStorageSupported, _isWorker } from './platform';\n\nexport const Persistence = {\n  LOCAL: 'local',\n  NONE: 'none',\n  SESSION: 'session'\n};\n\nconst _assert: typeof exp._assert = exp._assert;\n\nconst PERSISTENCE_KEY = 'persistence';\n\n/**\n * Validates that an argument is a valid persistence value. If an invalid type\n * is specified, an error is thrown synchronously.\n */\nexport function _validatePersistenceArgument(\n  auth: exp.Auth,\n  persistence: string\n): void {\n  _assert(\n    Object.values(Persistence).includes(persistence),\n    auth,\n    exp.AuthErrorCode.INVALID_PERSISTENCE\n  );\n  // Validate if the specified type is supported in the current environment.\n  if (isReactNative()) {\n    // This is only supported in a browser.\n    _assert(\n      persistence !== Persistence.SESSION,\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  if (isNode()) {\n    // Only none is supported in Node.js.\n    _assert(\n      persistence === Persistence.NONE,\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  if (_isWorker()) {\n    // In a worker environment, either LOCAL or NONE are supported.\n    // If indexedDB not supported and LOCAL provided, throw an error\n    _assert(\n      persistence === Persistence.NONE ||\n        (persistence === Persistence.LOCAL && isIndexedDBAvailable()),\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  // This is restricted by what the browser supports.\n  _assert(\n    persistence === Persistence.NONE || _isWebStorageSupported(),\n    auth,\n    exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n  );\n}\n\nexport async function _savePersistenceForRedirect(\n  auth: exp.AuthInternal\n): Promise<void> {\n  await auth._initializationPromise;\n  const session = getSessionStorageIfAvailable();\n  const key = exp._persistenceKeyName(\n    PERSISTENCE_KEY,\n    auth.config.apiKey,\n    auth.name\n  );\n  if (session) {\n    session.setItem(key, auth._getPersistence());\n  }\n}\n\nexport function _getPersistencesFromRedirect(\n  apiKey: string,\n  appName: string\n): exp.Persistence[] {\n  const session = getSessionStorageIfAvailable();\n  if (!session) {\n    return [];\n  }\n\n  const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\n  const persistence = session.getItem(key);\n\n  switch (persistence) {\n    case Persistence.NONE:\n      return [exp.inMemoryPersistence];\n    case Persistence.LOCAL:\n      return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\n    case Persistence.SESSION:\n      return [exp.browserSessionPersistence];\n    default:\n      return [];\n  }\n}\n\n/** Returns session storage, or null if the property access errors */\nfunction getSessionStorageIfAvailable(): Storage | null {\n  try {\n    return _getSelfWindow()?.sessionStorage || null;\n  } catch (e) {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport { _isCordova, _isLikelyCordova } from './platform';\n\nconst _assert: typeof exp._assert = exp._assert;\n\n/** Platform-agnostic popup-redirect resolver */\nexport class CompatPopupRedirectResolver\n  implements exp.PopupRedirectResolverInternal\n{\n  // Create both resolvers for dynamic resolution later\n  private readonly browserResolver: exp.PopupRedirectResolverInternal =\n    exp._getInstance(exp.browserPopupRedirectResolver);\n  private readonly cordovaResolver: exp.PopupRedirectResolverInternal =\n    exp._getInstance(exp.cordovaPopupRedirectResolver);\n  // The actual resolver in use: either browserResolver or cordovaResolver.\n  private underlyingResolver: exp.PopupRedirectResolverInternal | null = null;\n  _redirectPersistence = exp.browserSessionPersistence;\n\n  _completeRedirectFn: (\n    auth: exp.Auth,\n    resolver: exp.PopupRedirectResolver,\n    bypassAuthState: boolean\n  ) => Promise<exp.UserCredential | null> = exp._getRedirectResult;\n  _overrideRedirectResult = exp._overrideRedirectResult;\n\n  async _initialize(auth: exp.AuthImpl): Promise<exp.EventManager> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._initialize(auth);\n  }\n\n  async _openPopup(\n    auth: exp.AuthImpl,\n    provider: exp.AuthProvider,\n    authType: exp.AuthEventType,\n    eventId?: string\n  ): Promise<exp.AuthPopup> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._openPopup(\n      auth,\n      provider,\n      authType,\n      eventId\n    );\n  }\n\n  async _openRedirect(\n    auth: exp.AuthImpl,\n    provider: exp.AuthProvider,\n    authType: exp.AuthEventType,\n    eventId?: string\n  ): Promise<void> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._openRedirect(\n      auth,\n      provider,\n      authType,\n      eventId\n    );\n  }\n\n  _isIframeWebStorageSupported(\n    auth: exp.AuthImpl,\n    cb: (support: boolean) => unknown\n  ): void {\n    this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\n  }\n\n  _originValidation(auth: exp.Auth): Promise<void> {\n    return this.assertedUnderlyingResolver._originValidation(auth);\n  }\n\n  get _shouldInitProactively(): boolean {\n    return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\n  }\n\n  private get assertedUnderlyingResolver(): exp.PopupRedirectResolverInternal {\n    _assert(this.underlyingResolver, exp.AuthErrorCode.INTERNAL_ERROR);\n    return this.underlyingResolver;\n  }\n\n  private async selectUnderlyingResolver(): Promise<void> {\n    if (this.underlyingResolver) {\n      return;\n    }\n\n    // We haven't yet determined whether or not we're in Cordova; go ahead\n    // and determine that state now.\n    const isCordova = await _isCordova();\n    this.underlyingResolver = isCordova\n      ? this.cordovaResolver\n      : this.browserResolver;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Forward direction wrapper from Compat --unwrap-> Exp */\nexport interface Wrapper<T> {\n  unwrap(): T;\n}\n\n/** Reverse direction wrapper from Exp --wrapped--> Compat */\nexport interface ReverseWrapper<T> {\n  wrapped(): T;\n}\n\nexport function unwrap<T>(object: unknown): T {\n  return (object as Wrapper<T>).unwrap();\n}\n\nexport function wrapped<T>(object: unknown): T {\n  return (object as ReverseWrapper<T>).wrapped();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { FirebaseError } from '@firebase/util';\nimport { Auth } from './auth';\nimport { User } from './user';\nimport { unwrap, wrapped } from './wrap';\n\nfunction credentialFromResponse(\n  userCredential: exp.UserCredentialInternal\n): exp.AuthCredential | null {\n  return credentialFromObject(userCredential);\n}\n\nfunction attachExtraErrorFields(auth: exp.Auth, e: FirebaseError): void {\n  // The response contains all fields from the server which may or may not\n  // actually match the underlying type\n  const response = (e.customData as exp.TaggedWithTokenResponse | undefined)\n    ?._tokenResponse as unknown as Record<string, string>;\n  if ((e as FirebaseError)?.code === 'auth/multi-factor-auth-required') {\n    const mfaErr = e as compat.MultiFactorError;\n    mfaErr.resolver = new MultiFactorResolver(\n      auth,\n      exp.getMultiFactorResolver(auth, e as exp.MultiFactorError)\n    );\n  } else if (response) {\n    const credential = credentialFromObject(e);\n    const credErr = e as compat.AuthError;\n    if (credential) {\n      credErr.credential = credential;\n      credErr.tenantId = response.tenantId || undefined;\n      credErr.email = response.email || undefined;\n      credErr.phoneNumber = response.phoneNumber || undefined;\n    }\n  }\n}\n\nfunction credentialFromObject(\n  object: FirebaseError | exp.UserCredential\n): exp.AuthCredential | null {\n  const { _tokenResponse } = (\n    object instanceof FirebaseError ? object.customData : object\n  ) as exp.TaggedWithTokenResponse;\n  if (!_tokenResponse) {\n    return null;\n  }\n\n  // Handle phone Auth credential responses, as they have a different format\n  // from other backend responses (i.e. no providerId). This is also only the\n  // case for user credentials (does not work for errors).\n  if (!(object instanceof FirebaseError)) {\n    if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\n      return exp.PhoneAuthProvider.credentialFromResult(object);\n    }\n  }\n\n  const providerId = _tokenResponse.providerId;\n\n  // Email and password is not supported as there is no situation where the\n  // server would return the password to the client.\n  if (!providerId || providerId === exp.ProviderId.PASSWORD) {\n    return null;\n  }\n\n  let provider: Pick<\n    typeof exp.OAuthProvider,\n    'credentialFromResult' | 'credentialFromError'\n  >;\n  switch (providerId) {\n    case exp.ProviderId.GOOGLE:\n      provider = exp.GoogleAuthProvider;\n      break;\n    case exp.ProviderId.FACEBOOK:\n      provider = exp.FacebookAuthProvider;\n      break;\n    case exp.ProviderId.GITHUB:\n      provider = exp.GithubAuthProvider;\n      break;\n    case exp.ProviderId.TWITTER:\n      provider = exp.TwitterAuthProvider;\n      break;\n    default:\n      const {\n        oauthIdToken,\n        oauthAccessToken,\n        oauthTokenSecret,\n        pendingToken,\n        nonce\n      } = _tokenResponse as exp.SignInWithIdpResponse;\n      if (\n        !oauthAccessToken &&\n        !oauthTokenSecret &&\n        !oauthIdToken &&\n        !pendingToken\n      ) {\n        return null;\n      }\n      // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\n      if (pendingToken) {\n        if (providerId.startsWith('saml.')) {\n          return exp.SAMLAuthCredential._create(providerId, pendingToken);\n        } else {\n          // OIDC and non-default providers excluding Twitter.\n          return exp.OAuthCredential._fromParams({\n            providerId,\n            signInMethod: providerId,\n            pendingToken,\n            idToken: oauthIdToken,\n            accessToken: oauthAccessToken\n          });\n        }\n      }\n      return new exp.OAuthProvider(providerId).credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        rawNonce: nonce\n      });\n  }\n\n  return object instanceof FirebaseError\n    ? provider.credentialFromError(object)\n    : provider.credentialFromResult(object);\n}\n\nexport function convertCredential(\n  auth: exp.Auth,\n  credentialPromise: Promise<exp.UserCredential>\n): Promise<compat.UserCredential> {\n  return credentialPromise\n    .catch(e => {\n      if (e instanceof FirebaseError) {\n        attachExtraErrorFields(auth, e);\n      }\n      throw e;\n    })\n    .then(credential => {\n      const operationType = credential.operationType;\n      const user = credential.user;\n\n      return {\n        operationType,\n        credential: credentialFromResponse(\n          credential as exp.UserCredentialInternal\n        ),\n        additionalUserInfo: exp.getAdditionalUserInfo(\n          credential as exp.UserCredential\n        ),\n        user: User.getOrCreate(user)\n      };\n    });\n}\n\nexport async function convertConfirmationResult(\n  auth: exp.Auth,\n  confirmationResultPromise: Promise<exp.ConfirmationResult>\n): Promise<compat.ConfirmationResult> {\n  const confirmationResultExp = await confirmationResultPromise;\n  return {\n    verificationId: confirmationResultExp.verificationId,\n    confirm: (verificationCode: string) =>\n      convertCredential(auth, confirmationResultExp.confirm(verificationCode))\n  };\n}\n\nclass MultiFactorResolver implements compat.MultiFactorResolver {\n  readonly auth: Auth;\n  constructor(\n    auth: exp.Auth,\n    private readonly resolver: exp.MultiFactorResolver\n  ) {\n    this.auth = wrapped(auth);\n  }\n\n  get session(): compat.MultiFactorSession {\n    return this.resolver.session;\n  }\n\n  get hints(): compat.MultiFactorInfo[] {\n    return this.resolver.hints;\n  }\n\n  resolveSignIn(\n    assertion: compat.MultiFactorAssertion\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      unwrap(this.auth),\n      this.resolver.resolveSignIn(assertion as exp.MultiFactorAssertion)\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Compat } from '@firebase/util';\nimport { _savePersistenceForRedirect } from './persistence';\nimport { CompatPopupRedirectResolver } from './popup_redirect';\nimport {\n  convertConfirmationResult,\n  convertCredential\n} from './user_credential';\n\nexport class User implements compat.User, Compat<exp.User> {\n  // Maintain a map so that there's always a 1:1 mapping between new User and\n  // legacy compat users\n  private static readonly USER_MAP = new WeakMap<exp.User, User>();\n\n  readonly multiFactor: compat.MultiFactorUser;\n\n  private constructor(readonly _delegate: exp.User) {\n    this.multiFactor = exp.multiFactor(_delegate);\n  }\n\n  static getOrCreate(user: exp.User): User {\n    if (!User.USER_MAP.has(user)) {\n      User.USER_MAP.set(user, new User(user));\n    }\n\n    return User.USER_MAP.get(user)!;\n  }\n\n  delete(): Promise<void> {\n    return this._delegate.delete();\n  }\n  reload(): Promise<void> {\n    return this._delegate.reload();\n  }\n  toJSON(): object {\n    return this._delegate.toJSON();\n  }\n  getIdTokenResult(forceRefresh?: boolean): Promise<compat.IdTokenResult> {\n    return this._delegate.getIdTokenResult(forceRefresh);\n  }\n  getIdToken(forceRefresh?: boolean): Promise<string> {\n    return this._delegate.getIdToken(forceRefresh);\n  }\n  linkAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.linkWithCredential(credential);\n  }\n  async linkWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.linkWithCredential(this._delegate, credential as exp.AuthCredential)\n    );\n  }\n  async linkWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this.auth,\n      exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier)\n    );\n  }\n  async linkWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.linkWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async linkWithRedirect(provider: compat.AuthProvider): Promise<void> {\n    await _savePersistenceForRedirect(exp._castAuth(this.auth));\n    return exp.linkWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  reauthenticateAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.reauthenticateWithCredential(credential);\n  }\n  async reauthenticateWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth as unknown as exp.Auth,\n      exp.reauthenticateWithCredential(\n        this._delegate,\n        credential as exp.AuthCredential\n      )\n    );\n  }\n  reauthenticateWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this.auth,\n      exp.reauthenticateWithPhoneNumber(\n        this._delegate,\n        phoneNumber,\n        applicationVerifier\n      )\n    );\n  }\n  reauthenticateWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.reauthenticateWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async reauthenticateWithRedirect(\n    provider: compat.AuthProvider\n  ): Promise<void> {\n    await _savePersistenceForRedirect(exp._castAuth(this.auth));\n    return exp.reauthenticateWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  sendEmailVerification(\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.sendEmailVerification(this._delegate, actionCodeSettings);\n  }\n  async unlink(providerId: string): Promise<compat.User> {\n    await exp.unlink(this._delegate, providerId);\n    return this;\n  }\n  updateEmail(newEmail: string): Promise<void> {\n    return exp.updateEmail(this._delegate, newEmail);\n  }\n  updatePassword(newPassword: string): Promise<void> {\n    return exp.updatePassword(this._delegate, newPassword);\n  }\n  updatePhoneNumber(phoneCredential: compat.AuthCredential): Promise<void> {\n    return exp.updatePhoneNumber(\n      this._delegate,\n      phoneCredential as exp.PhoneAuthCredential\n    );\n  }\n  updateProfile(profile: {\n    displayName?: string | null;\n    photoURL?: string | null;\n  }): Promise<void> {\n    return exp.updateProfile(this._delegate, profile);\n  }\n  verifyBeforeUpdateEmail(\n    newEmail: string,\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.verifyBeforeUpdateEmail(\n      this._delegate,\n      newEmail,\n      actionCodeSettings\n    );\n  }\n  get emailVerified(): boolean {\n    return this._delegate.emailVerified;\n  }\n  get isAnonymous(): boolean {\n    return this._delegate.isAnonymous;\n  }\n  get metadata(): compat.UserMetadata {\n    return this._delegate.metadata;\n  }\n  get phoneNumber(): string | null {\n    return this._delegate.phoneNumber;\n  }\n  get providerData(): Array<compat.UserInfo | null> {\n    return this._delegate.providerData;\n  }\n  get refreshToken(): string {\n    return this._delegate.refreshToken;\n  }\n  get tenantId(): string | null {\n    return this._delegate.tenantId;\n  }\n  get displayName(): string | null {\n    return this._delegate.displayName;\n  }\n  get email(): string | null {\n    return this._delegate.email;\n  }\n  get photoURL(): string | null {\n    return this._delegate.photoURL;\n  }\n  get providerId(): string {\n    return this._delegate.providerId;\n  }\n  get uid(): string {\n    return this._delegate.uid;\n  }\n  private get auth(): exp.Auth {\n    return (this._delegate as exp.UserImpl).auth as unknown as exp.Auth;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Provider } from '@firebase/component';\nimport { ErrorFn, Observer, Unsubscribe } from '@firebase/util';\n\nimport {\n  _validatePersistenceArgument,\n  Persistence,\n  _getPersistencesFromRedirect,\n  _savePersistenceForRedirect\n} from './persistence';\nimport { _isPopupRedirectSupported } from './platform';\nimport { CompatPopupRedirectResolver } from './popup_redirect';\nimport { User } from './user';\nimport {\n  convertConfirmationResult,\n  convertCredential\n} from './user_credential';\nimport { ReverseWrapper, Wrapper } from './wrap';\n\nconst _assert: typeof exp._assert = exp._assert;\n\nexport class Auth\n  implements compat.FirebaseAuth, Wrapper<exp.Auth>, _FirebaseService\n{\n  static Persistence = Persistence;\n  readonly _delegate: exp.AuthImpl;\n\n  constructor(readonly app: FirebaseApp, provider: Provider<'auth'>) {\n    if (provider.isInitialized()) {\n      this._delegate = provider.getImmediate() as exp.AuthImpl;\n      this.linkUnderlyingAuth();\n      return;\n    }\n\n    const { apiKey } = app.options;\n    // TODO: platform needs to be determined using heuristics\n    _assert(apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n\n    // TODO: platform needs to be determined using heuristics\n    _assert(apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n\n    // Only use a popup/redirect resolver in browser environments\n    const resolver =\n      typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\n    this._delegate = provider.initialize({\n      options: {\n        persistence: buildPersistenceHierarchy(apiKey, app.name),\n        popupRedirectResolver: resolver\n      }\n    }) as exp.AuthImpl;\n\n    this._delegate._updateErrorMap(exp.debugErrorMap);\n    this.linkUnderlyingAuth();\n  }\n\n  get emulatorConfig(): compat.EmulatorConfig | null {\n    return this._delegate.emulatorConfig;\n  }\n\n  get currentUser(): compat.User | null {\n    if (!this._delegate.currentUser) {\n      return null;\n    }\n\n    return User.getOrCreate(this._delegate.currentUser);\n  }\n  get languageCode(): string | null {\n    return this._delegate.languageCode;\n  }\n  set languageCode(languageCode: string | null) {\n    this._delegate.languageCode = languageCode;\n  }\n  get settings(): compat.AuthSettings {\n    return this._delegate.settings;\n  }\n  get tenantId(): string | null {\n    return this._delegate.tenantId;\n  }\n  set tenantId(tid: string | null) {\n    this._delegate.tenantId = tid;\n  }\n  useDeviceLanguage(): void {\n    this._delegate.useDeviceLanguage();\n  }\n  signOut(): Promise<void> {\n    return this._delegate.signOut();\n  }\n  useEmulator(url: string, options?: { disableWarnings: boolean }): void {\n    exp.connectAuthEmulator(this._delegate, url, options);\n  }\n  applyActionCode(code: string): Promise<void> {\n    return exp.applyActionCode(this._delegate, code);\n  }\n\n  checkActionCode(code: string): Promise<compat.ActionCodeInfo> {\n    return exp.checkActionCode(this._delegate, code);\n  }\n\n  confirmPasswordReset(code: string, newPassword: string): Promise<void> {\n    return exp.confirmPasswordReset(this._delegate, code, newPassword);\n  }\n\n  async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.createUserWithEmailAndPassword(this._delegate, email, password)\n    );\n  }\n  fetchProvidersForEmail(email: string): Promise<string[]> {\n    return this.fetchSignInMethodsForEmail(email);\n  }\n  fetchSignInMethodsForEmail(email: string): Promise<string[]> {\n    return exp.fetchSignInMethodsForEmail(this._delegate, email);\n  }\n  isSignInWithEmailLink(emailLink: string): boolean {\n    return exp.isSignInWithEmailLink(this._delegate, emailLink);\n  }\n  async getRedirectResult(): Promise<compat.UserCredential> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const credential = await exp.getRedirectResult(\n      this._delegate,\n      CompatPopupRedirectResolver\n    );\n    if (!credential) {\n      return {\n        credential: null,\n        user: null\n      };\n    }\n    return convertCredential(this._delegate, Promise.resolve(credential));\n  }\n\n  // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n  // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\n  // out of autogenerated documentation pages to reduce accidental misuse.\n  addFrameworkForLogging(framework: string): void {\n    exp.addFrameworkForLogging(this._delegate, framework);\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n    errorFn?: (error: compat.Error) => unknown,\n    completed?: Unsubscribe\n  ): Unsubscribe {\n    const { next, error, complete } = wrapObservers(\n      nextOrObserver,\n      errorFn,\n      completed\n    );\n    return this._delegate.onAuthStateChanged(next!, error, complete);\n  }\n  onIdTokenChanged(\n    nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n    errorFn?: (error: compat.Error) => unknown,\n    completed?: Unsubscribe\n  ): Unsubscribe {\n    const { next, error, complete } = wrapObservers(\n      nextOrObserver,\n      errorFn,\n      completed\n    );\n    return this._delegate.onIdTokenChanged(next!, error, complete);\n  }\n  sendSignInLinkToEmail(\n    email: string,\n    actionCodeSettings: compat.ActionCodeSettings\n  ): Promise<void> {\n    return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\n  }\n  sendPasswordResetEmail(\n    email: string,\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.sendPasswordResetEmail(\n      this._delegate,\n      email,\n      actionCodeSettings || undefined\n    );\n  }\n  async setPersistence(persistence: string): Promise<void> {\n    _validatePersistenceArgument(this._delegate, persistence);\n    let converted;\n    switch (persistence) {\n      case Persistence.SESSION:\n        converted = exp.browserSessionPersistence;\n        break;\n      case Persistence.LOCAL:\n        // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\n        const isIndexedDBFullySupported = await exp\n          ._getInstance<exp.PersistenceInternal>(exp.indexedDBLocalPersistence)\n          ._isAvailable();\n        converted = isIndexedDBFullySupported\n          ? exp.indexedDBLocalPersistence\n          : exp.browserLocalPersistence;\n        break;\n      case Persistence.NONE:\n        converted = exp.inMemoryPersistence;\n        break;\n      default:\n        return exp._fail(exp.AuthErrorCode.ARGUMENT_ERROR, {\n          appName: this._delegate.name\n        });\n    }\n\n    return this._delegate.setPersistence(converted);\n  }\n\n  signInAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.signInWithCredential(credential);\n  }\n  signInAnonymously(): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInAnonymously(this._delegate)\n    );\n  }\n  signInWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithCredential(this._delegate, credential as exp.AuthCredential)\n    );\n  }\n  signInWithCustomToken(token: string): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithCustomToken(this._delegate, token)\n    );\n  }\n  signInWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithEmailAndPassword(this._delegate, email, password)\n    );\n  }\n  signInWithEmailLink(\n    email: string,\n    emailLink?: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithEmailLink(this._delegate, email, emailLink)\n    );\n  }\n  signInWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this._delegate,\n      exp.signInWithPhoneNumber(\n        this._delegate,\n        phoneNumber,\n        applicationVerifier\n      )\n    );\n  }\n  async signInWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    return convertCredential(\n      this._delegate,\n      exp.signInWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async signInWithRedirect(provider: compat.AuthProvider): Promise<void> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n\n    await _savePersistenceForRedirect(this._delegate);\n    return exp.signInWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  updateCurrentUser(user: compat.User | null): Promise<void> {\n    // remove ts-ignore once overloads are defined for exp functions to accept compat objects\n    // @ts-ignore\n    return this._delegate.updateCurrentUser(user);\n  }\n  verifyPasswordResetCode(code: string): Promise<string> {\n    return exp.verifyPasswordResetCode(this._delegate, code);\n  }\n  unwrap(): exp.Auth {\n    return this._delegate;\n  }\n  _delete(): Promise<void> {\n    return this._delegate._delete();\n  }\n  private linkUnderlyingAuth(): void {\n    (this._delegate as unknown as ReverseWrapper<Auth>).wrapped = () => this;\n  }\n}\n\nfunction wrapObservers(\n  nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n  error?: (error: compat.Error) => unknown,\n  complete?: Unsubscribe\n): Partial<Observer<exp.User | null>> {\n  let next = nextOrObserver;\n  if (typeof nextOrObserver !== 'function') {\n    ({ next, error, complete } = nextOrObserver);\n  }\n\n  // We know 'next' is now a function\n  const oldNext = next as (a: compat.User | null) => unknown;\n\n  const newNext = (user: exp.User | null): unknown =>\n    oldNext(user && User.getOrCreate(user as exp.User));\n  return {\n    next: newNext,\n    error: error as ErrorFn,\n    complete\n  };\n}\n\nfunction buildPersistenceHierarchy(\n  apiKey: string,\n  appName: string\n): exp.Persistence[] {\n  // Note this is slightly different behavior: in this case, the stored\n  // persistence is checked *first* rather than last. This is because we want\n  // to prefer stored persistence type in the hierarchy. This is an empty\n  // array if window is not available or there is no pending redirect\n  const persistences = _getPersistencesFromRedirect(apiKey, appName);\n\n  // If \"self\" is available, add indexedDB\n  if (\n    typeof self !== 'undefined' &&\n    !persistences.includes(exp.indexedDBLocalPersistence)\n  ) {\n    persistences.push(exp.indexedDBLocalPersistence);\n  }\n\n  // If \"window\" is available, add HTML Storage persistences\n  if (typeof window !== 'undefined') {\n    for (const persistence of [\n      exp.browserLocalPersistence,\n      exp.browserSessionPersistence\n    ]) {\n      if (!persistences.includes(persistence)) {\n        persistences.push(persistence);\n      }\n    }\n  }\n\n  // Add in-memory as a final fallback\n  if (!persistences.includes(exp.inMemoryPersistence)) {\n    persistences.push(exp.inMemoryPersistence);\n  }\n\n  return persistences;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport firebase from '@firebase/app-compat';\nimport { Compat } from '@firebase/util';\nimport { unwrap } from './wrap';\n\nexport class PhoneAuthProvider\n  implements compat.PhoneAuthProvider, Compat<exp.PhoneAuthProvider>\n{\n  providerId = 'phone';\n  readonly _delegate: exp.PhoneAuthProvider;\n\n  static PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\n  static PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): compat.AuthCredential {\n    return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\n  }\n\n  constructor() {\n    // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n    this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth!()));\n  }\n\n  verifyPhoneNumber(\n    phoneInfoOptions:\n      | string\n      | compat.PhoneSingleFactorInfoOptions\n      | compat.PhoneMultiFactorEnrollInfoOptions\n      | compat.PhoneMultiFactorSignInInfoOptions,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<string> {\n    return this._delegate.verifyPhoneNumber(\n      // The implementation matches but the types are subtly incompatible\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      phoneInfoOptions as any,\n      applicationVerifier\n    );\n  }\n\n  unwrap(): exp.PhoneAuthProvider {\n    return this._delegate;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, { FirebaseApp } from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Compat } from '@firebase/util';\n\nconst _assert: typeof exp._assert = exp._assert;\n\nexport class RecaptchaVerifier\n  implements compat.RecaptchaVerifier, Compat<exp.ApplicationVerifier>\n{\n  readonly _delegate: exp.RecaptchaVerifier;\n  type: string;\n  constructor(\n    container: HTMLElement | string,\n    parameters?: object | null,\n    app: FirebaseApp = firebase.app()\n  ) {\n    // API key is required for web client RPC calls.\n    _assert(app.options?.apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n    this._delegate = new exp.RecaptchaVerifier(\n      // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n      // @ts-ignore\n      app.auth!(),\n      container,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parameters as any\n    );\n    this.type = this._delegate.type;\n  }\n  clear(): void {\n    this._delegate.clear();\n  }\n  render(): Promise<number> {\n    return this._delegate.render();\n  }\n  verify(): Promise<string> {\n    return this._delegate.verify();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\nimport * as impl from '@firebase/auth/internal';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\nimport { FirebaseError } from '@firebase/util';\n\nimport * as types from '@firebase/auth-types';\nimport { name, version } from './package.json';\nimport { Auth } from './src/auth';\nimport { PhoneAuthProvider as CompatAuthProvider } from './src/phone_auth_provider';\nimport { RecaptchaVerifier as CompatRecaptchaVerifier } from './src/recaptcha_verifier';\n\nconst AUTH_TYPE = 'auth-compat';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'auth-compat': types.FirebaseAuth;\n  }\n}\n\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    auth: {\n      (app?: FirebaseApp): types.FirebaseAuth;\n      Auth: typeof types.FirebaseAuth;\n      EmailAuthProvider: typeof types.EmailAuthProvider;\n      EmailAuthProvider_Instance: typeof types.EmailAuthProvider_Instance;\n      FacebookAuthProvider: typeof types.FacebookAuthProvider;\n      FacebookAuthProvider_Instance: typeof types.FacebookAuthProvider_Instance;\n      GithubAuthProvider: typeof types.GithubAuthProvider;\n      GithubAuthProvider_Instance: typeof types.GithubAuthProvider_Instance;\n      GoogleAuthProvider: typeof types.GoogleAuthProvider;\n      GoogleAuthProvider_Instance: typeof types.GoogleAuthProvider_Instance;\n      OAuthProvider: typeof types.OAuthProvider;\n      SAMLAuthProvider: typeof types.SAMLAuthProvider;\n      PhoneAuthProvider: typeof types.PhoneAuthProvider;\n      PhoneAuthProvider_Instance: typeof types.PhoneAuthProvider_Instance;\n      PhoneMultiFactorGenerator: typeof types.PhoneMultiFactorGenerator;\n      RecaptchaVerifier: typeof types.RecaptchaVerifier;\n      RecaptchaVerifier_Instance: typeof types.RecaptchaVerifier_Instance;\n      TwitterAuthProvider: typeof types.TwitterAuthProvider;\n      TwitterAuthProvider_Instance: typeof types.TwitterAuthProvider_Instance;\n    };\n  }\n  interface FirebaseApp {\n    auth?(): types.FirebaseAuth;\n  }\n}\n\n// Create auth components to register with firebase.\n// Provides Auth public APIs.\nfunction registerAuthCompat(instance: _FirebaseNamespace): void {\n  instance.INTERNAL.registerComponent(\n    new Component(\n      AUTH_TYPE,\n      container => {\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app-compat').getImmediate();\n        const authProvider = container.getProvider('auth');\n        return new Auth(app, authProvider);\n      },\n      ComponentType.PUBLIC\n    )\n      .setServiceProps({\n        ActionCodeInfo: {\n          Operation: {\n            EMAIL_SIGNIN: impl.ActionCodeOperation.EMAIL_SIGNIN,\n            PASSWORD_RESET: impl.ActionCodeOperation.PASSWORD_RESET,\n            RECOVER_EMAIL: impl.ActionCodeOperation.RECOVER_EMAIL,\n            REVERT_SECOND_FACTOR_ADDITION:\n              impl.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\n            VERIFY_AND_CHANGE_EMAIL:\n              impl.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n            VERIFY_EMAIL: impl.ActionCodeOperation.VERIFY_EMAIL\n          }\n        },\n        EmailAuthProvider: impl.EmailAuthProvider,\n        FacebookAuthProvider: impl.FacebookAuthProvider,\n        GithubAuthProvider: impl.GithubAuthProvider,\n        GoogleAuthProvider: impl.GoogleAuthProvider,\n        OAuthProvider: impl.OAuthProvider,\n        SAMLAuthProvider: impl.SAMLAuthProvider,\n        PhoneAuthProvider: CompatAuthProvider,\n        PhoneMultiFactorGenerator: impl.PhoneMultiFactorGenerator,\n        RecaptchaVerifier: CompatRecaptchaVerifier,\n        TwitterAuthProvider: impl.TwitterAuthProvider,\n        Auth,\n        AuthCredential: impl.AuthCredential,\n        Error: FirebaseError\n      })\n      .setInstantiationMode(InstantiationMode.LAZY)\n      .setMultipleInstances(false)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterAuthCompat(firebase as _FirebaseNamespace);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}