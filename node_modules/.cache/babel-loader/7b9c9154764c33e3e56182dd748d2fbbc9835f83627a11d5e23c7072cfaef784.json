{"ast":null,"code":"import _toArray from \"/Users/thienantran/Downloads/chatter/node_modules/@babel/runtime/helpers/esm/toArray.js\";\nimport _regeneratorRuntime from \"/Users/thienantran/Downloads/chatter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/thienantran/Downloads/chatter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/thienantran/Downloads/chatter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/thienantran/Downloads/chatter/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/thienantran/Downloads/chatter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/thienantran/Downloads/chatter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/thienantran/Downloads/chatter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _asyncToGenerator from \"/Users/thienantran/Downloads/chatter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { at as debugAssert, au as _isIOS, av as _isAndroid, aw as _fail, ax as _getRedirectUrl, ay as _getProjectConfig, az as _isIOS7Or8, aA as _createError, aB as _assert, aC as AuthEventManager, aD as _getInstance, b as browserLocalPersistence, aE as _persistenceKeyName, a as browserSessionPersistence, aF as _getRedirectResult, aG as _overrideRedirectResult, aH as _clearRedirectOutcomes, aI as _castAuth } from './index-9a76d29a.js';\nexport { A as ActionCodeOperation, ah as ActionCodeURL, K as AuthCredential, H as AuthErrorCodes, aK as AuthImpl, aN as AuthPopup, L as EmailAuthCredential, U as EmailAuthProvider, V as FacebookAuthProvider, F as FactorId, aO as FetchProvider, X as GithubAuthProvider, W as GoogleAuthProvider, M as OAuthCredential, Y as OAuthProvider, O as OperationType, N as PhoneAuthCredential, P as PhoneAuthProvider, m as PhoneMultiFactorGenerator, p as ProviderId, R as RecaptchaVerifier, aP as SAMLAuthCredential, Z as SAMLAuthProvider, S as SignInMethod, T as TotpMultiFactorGenerator, n as TotpSecret, _ as TwitterAuthProvider, aJ as UserImpl, aB as _assert, aI as _castAuth, aw as _fail, aM as _generateEventId, aL as _getClientVersion, aD as _getInstance, aF as _getRedirectResult, aG as _overrideRedirectResult, aE as _persistenceKeyName, a6 as applyActionCode, x as beforeAuthStateChanged, b as browserLocalPersistence, k as browserPopupRedirectResolver, a as browserSessionPersistence, a7 as checkActionCode, a5 as confirmPasswordReset, J as connectAuthEmulator, a9 as createUserWithEmailAndPassword, E as debugErrorMap, D as deleteUser, ae as fetchSignInMethodsForEmail, ap as getAdditionalUserInfo, o as getAuth, am as getIdToken, an as getIdTokenResult, ar as getMultiFactorResolver, j as getRedirectResult, Q as inMemoryPersistence, i as indexedDBLocalPersistence, I as initializeAuth, t as initializeRecaptchaConfig, ac as isSignInWithEmailLink, a1 as linkWithCredential, l as linkWithPhoneNumber, d as linkWithPopup, g as linkWithRedirect, as as multiFactor, y as onAuthStateChanged, w as onIdTokenChanged, ai as parseActionCodeURL, G as prodErrorMap, a2 as reauthenticateWithCredential, r as reauthenticateWithPhoneNumber, e as reauthenticateWithPopup, h as reauthenticateWithRedirect, aq as reload, af as sendEmailVerification, a4 as sendPasswordResetEmail, ab as sendSignInLinkToEmail, q as setPersistence, $ as signInAnonymously, a0 as signInWithCredential, a3 as signInWithCustomToken, aa as signInWithEmailAndPassword, ad as signInWithEmailLink, s as signInWithPhoneNumber, c as signInWithPopup, f as signInWithRedirect, C as signOut, ao as unlink, B as updateCurrentUser, ak as updateEmail, al as updatePassword, u as updatePhoneNumber, aj as updateProfile, z as useDeviceLanguage, v as validatePassword, ag as verifyBeforeUpdateEmail, a8 as verifyPasswordResetCode } from './index-9a76d29a.js';\nimport { querystringDecode } from '@firebase/util';\nimport '@firebase/app';\nimport '@firebase/logger';\nimport 'tslib';\nimport '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _cordovaWindow() {\n  return window;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * How long to wait after the app comes back into focus before concluding that\r\n * the user closed the sign in tab.\r\n */\nvar REDIRECT_TIMEOUT_MS = 2000;\n/**\r\n * Generates the URL for the OAuth handler.\r\n */\nfunction _generateHandlerUrl(_x, _x2, _x3) {\n  return _generateHandlerUrl2.apply(this, arguments);\n}\n/**\r\n * Validates that this app is valid for this project configuration\r\n */\nfunction _generateHandlerUrl2() {\n  _generateHandlerUrl2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(auth, event, provider) {\n    var _a, _cordovaWindow4, BuildInfo, sessionDigest, additionalParams;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          // Get the cordova plugins\n          _cordovaWindow4 = _cordovaWindow(), BuildInfo = _cordovaWindow4.BuildInfo;\n          debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\n          _context7.next = 4;\n          return computeSha256(event.sessionId);\n        case 4:\n          sessionDigest = _context7.sent;\n          additionalParams = {};\n          if (_isIOS()) {\n            // iOS app identifier\n            additionalParams['ibi'] = BuildInfo.packageName;\n          } else if (_isAndroid()) {\n            // Android app identifier\n            additionalParams['apn'] = BuildInfo.packageName;\n          } else {\n            _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\n          }\n          // Add the display name if available\n          if (BuildInfo.displayName) {\n            additionalParams['appDisplayName'] = BuildInfo.displayName;\n          }\n          // Attached the hashed session ID\n          additionalParams['sessionId'] = sessionDigest;\n          return _context7.abrupt(\"return\", _getRedirectUrl(auth, provider, event.type, undefined, (_a = event.eventId) !== null && _a !== void 0 ? _a : undefined, additionalParams));\n        case 10:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return _generateHandlerUrl2.apply(this, arguments);\n}\nfunction _validateOrigin(_x4) {\n  return _validateOrigin2.apply(this, arguments);\n}\nfunction _validateOrigin2() {\n  _validateOrigin2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(auth) {\n    var _cordovaWindow5, BuildInfo, request;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _cordovaWindow5 = _cordovaWindow(), BuildInfo = _cordovaWindow5.BuildInfo;\n          request = {};\n          if (_isIOS()) {\n            request.iosBundleId = BuildInfo.packageName;\n          } else if (_isAndroid()) {\n            request.androidPackageName = BuildInfo.packageName;\n          } else {\n            _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\n          }\n          // Will fail automatically if package name is not authorized\n          _context8.next = 5;\n          return _getProjectConfig(auth, request);\n        case 5:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return _validateOrigin2.apply(this, arguments);\n}\nfunction _performRedirect(handlerUrl) {\n  // Get the cordova plugins\n  var _cordovaWindow2 = _cordovaWindow(),\n    cordova = _cordovaWindow2.cordova;\n  return new Promise(function (resolve) {\n    cordova.plugins.browsertab.isAvailable(function (browserTabIsAvailable) {\n      var iabRef = null;\n      if (browserTabIsAvailable) {\n        cordova.plugins.browsertab.openUrl(handlerUrl);\n      } else {\n        // TODO: Return the inappbrowser ref that's returned from the open call\n        iabRef = cordova.InAppBrowser.open(handlerUrl, _isIOS7Or8() ? '_blank' : '_system', 'location=yes');\n      }\n      resolve(iabRef);\n    });\n  });\n}\n/**\r\n * This function waits for app activity to be seen before resolving. It does\r\n * this by attaching listeners to various dom events. Once the app is determined\r\n * to be visible, this promise resolves. AFTER that resolution, the listeners\r\n * are detached and any browser tabs left open will be closed.\r\n */\nfunction _waitForAppResume(_x5, _x6, _x7) {\n  return _waitForAppResume2.apply(this, arguments);\n}\n/**\r\n * Checks the configuration of the Cordova environment. This has no side effect\r\n * if the configuration is correct; otherwise it throws an error with the\r\n * missing plugin.\r\n */\nfunction _waitForAppResume2() {\n  _waitForAppResume2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(auth, eventListener, iabRef) {\n    var _cordovaWindow6, cordova, cleanup;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          // Get the cordova plugins\n          _cordovaWindow6 = _cordovaWindow(), cordova = _cordovaWindow6.cordova;\n          cleanup = function cleanup() {};\n          _context9.prev = 2;\n          _context9.next = 5;\n          return new Promise(function (resolve, reject) {\n            var onCloseTimer = null;\n            // DEFINE ALL THE CALLBACKS =====\n            function authEventSeen() {\n              var _a;\n              // Auth event was detected. Resolve this promise and close the extra\n              // window if it's still open.\n              resolve();\n              var closeBrowserTab = (_a = cordova.plugins.browsertab) === null || _a === void 0 ? void 0 : _a.close;\n              if (typeof closeBrowserTab === 'function') {\n                closeBrowserTab();\n              }\n              // Close inappbrowser emebedded webview in iOS7 and 8 case if still\n              // open.\n              if (typeof (iabRef === null || iabRef === void 0 ? void 0 : iabRef.close) === 'function') {\n                iabRef.close();\n              }\n            }\n            function resumed() {\n              if (onCloseTimer) {\n                // This code already ran; do not rerun.\n                return;\n              }\n              onCloseTimer = window.setTimeout(function () {\n                // Wait two seeconds after resume then reject.\n                reject(_createError(auth, \"redirect-cancelled-by-user\" /* AuthErrorCode.REDIRECT_CANCELLED_BY_USER */));\n              }, REDIRECT_TIMEOUT_MS);\n            }\n            function visibilityChanged() {\n              if ((document === null || document === void 0 ? void 0 : document.visibilityState) === 'visible') {\n                resumed();\n              }\n            }\n            // ATTACH ALL THE LISTENERS =====\n            // Listen for the auth event\n            eventListener.addPassiveListener(authEventSeen);\n            // Listen for resume and visibility events\n            document.addEventListener('resume', resumed, false);\n            if (_isAndroid()) {\n              document.addEventListener('visibilitychange', visibilityChanged, false);\n            }\n            // SETUP THE CLEANUP FUNCTION =====\n            cleanup = function cleanup() {\n              eventListener.removePassiveListener(authEventSeen);\n              document.removeEventListener('resume', resumed, false);\n              document.removeEventListener('visibilitychange', visibilityChanged, false);\n              if (onCloseTimer) {\n                window.clearTimeout(onCloseTimer);\n              }\n            };\n          });\n        case 5:\n          _context9.prev = 5;\n          cleanup();\n          return _context9.finish(5);\n        case 8:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9, null, [[2,, 5, 8]]);\n  }));\n  return _waitForAppResume2.apply(this, arguments);\n}\nfunction _checkCordovaConfiguration(auth) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n  var win = _cordovaWindow();\n  // Check all dependencies installed.\n  // https://github.com/nordnet/cordova-universal-links-plugin\n  // Note that cordova-universal-links-plugin has been abandoned.\n  // A fork with latest fixes is available at:\n  // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\n  _assert(typeof ((_a = win === null || win === void 0 ? void 0 : win.universalLinks) === null || _a === void 0 ? void 0 : _a.subscribe) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\n    missingPlugin: 'cordova-universal-links-plugin-fix'\n  });\n  // https://www.npmjs.com/package/cordova-plugin-buildinfo\n  _assert(typeof ((_b = win === null || win === void 0 ? void 0 : win.BuildInfo) === null || _b === void 0 ? void 0 : _b.packageName) !== 'undefined', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\n    missingPlugin: 'cordova-plugin-buildInfo'\n  });\n  // https://github.com/google/cordova-plugin-browsertab\n  _assert(typeof ((_e = (_d = (_c = win === null || win === void 0 ? void 0 : win.cordova) === null || _c === void 0 ? void 0 : _c.plugins) === null || _d === void 0 ? void 0 : _d.browsertab) === null || _e === void 0 ? void 0 : _e.openUrl) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\n    missingPlugin: 'cordova-plugin-browsertab'\n  });\n  _assert(typeof ((_h = (_g = (_f = win === null || win === void 0 ? void 0 : win.cordova) === null || _f === void 0 ? void 0 : _f.plugins) === null || _g === void 0 ? void 0 : _g.browsertab) === null || _h === void 0 ? void 0 : _h.isAvailable) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\n    missingPlugin: 'cordova-plugin-browsertab'\n  });\n  // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\n  _assert(typeof ((_k = (_j = win === null || win === void 0 ? void 0 : win.cordova) === null || _j === void 0 ? void 0 : _j.InAppBrowser) === null || _k === void 0 ? void 0 : _k.open) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\n    missingPlugin: 'cordova-plugin-inappbrowser'\n  });\n}\n/**\r\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\r\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\r\n * protocol).\r\n */\nfunction computeSha256(_x8) {\n  return _computeSha.apply(this, arguments);\n}\nfunction _computeSha() {\n  _computeSha = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(sessionId) {\n    var bytes, buf, arr;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          bytes = stringToArrayBuffer(sessionId); // TODO: For IE11 crypto has a different name and this operation comes back\n          //       as an object, not a promise. This is the old proposed standard that\n          //       is used by IE11:\n          // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\n          _context10.next = 3;\n          return crypto.subtle.digest('SHA-256', bytes);\n        case 3:\n          buf = _context10.sent;\n          arr = Array.from(new Uint8Array(buf));\n          return _context10.abrupt(\"return\", arr.map(function (num) {\n            return num.toString(16).padStart(2, '0');\n          }).join(''));\n        case 6:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }));\n  return _computeSha.apply(this, arguments);\n}\nfunction stringToArrayBuffer(str) {\n  // This function is only meant to deal with an ASCII charset and makes\n  // certain simplifying assumptions.\n  debugAssert(/[0-9a-zA-Z]+/.test(str), 'Can only convert alpha-numeric strings');\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder().encode(str);\n  }\n  var buff = new ArrayBuffer(str.length);\n  var view = new Uint8Array(buff);\n  for (var i = 0; i < str.length; i++) {\n    view[i] = str.charCodeAt(i);\n  }\n  return view;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar SESSION_ID_LENGTH = 20;\n/** Custom AuthEventManager that adds passive listeners to events */\nvar CordovaAuthEventManager = /*#__PURE__*/function (_AuthEventManager) {\n  _inherits(CordovaAuthEventManager, _AuthEventManager);\n  var _super = _createSuper(CordovaAuthEventManager);\n  function CordovaAuthEventManager() {\n    var _this;\n    _classCallCheck(this, CordovaAuthEventManager);\n    _this = _super.apply(this, arguments);\n    _this.passiveListeners = new Set();\n    _this.initPromise = new Promise(function (resolve) {\n      _this.resolveInialized = resolve;\n    });\n    return _this;\n  }\n  _createClass(CordovaAuthEventManager, [{\n    key: \"addPassiveListener\",\n    value: function addPassiveListener(cb) {\n      this.passiveListeners.add(cb);\n    }\n  }, {\n    key: \"removePassiveListener\",\n    value: function removePassiveListener(cb) {\n      this.passiveListeners.delete(cb);\n    }\n    // In a Cordova environment, this manager can live through multiple redirect\n    // operations\n  }, {\n    key: \"resetRedirect\",\n    value: function resetRedirect() {\n      this.queuedRedirectEvent = null;\n      this.hasHandledPotentialRedirect = false;\n    }\n    /** Override the onEvent method */\n  }, {\n    key: \"onEvent\",\n    value: function onEvent(event) {\n      this.resolveInialized();\n      this.passiveListeners.forEach(function (cb) {\n        return cb(event);\n      });\n      return _get(_getPrototypeOf(CordovaAuthEventManager.prototype), \"onEvent\", this).call(this, event);\n    }\n  }, {\n    key: \"initialized\",\n    value: function () {\n      var _initialized = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.initPromise;\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initialized() {\n        return _initialized.apply(this, arguments);\n      }\n      return initialized;\n    }()\n  }]);\n  return CordovaAuthEventManager;\n}(AuthEventManager);\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\nfunction _generateNewEvent(auth, type) {\n  var eventId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return {\n    type: type,\n    eventId: eventId,\n    urlResponse: null,\n    sessionId: generateSessionId(),\n    postBody: null,\n    tenantId: auth.tenantId,\n    error: _createError(auth, \"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\n  };\n}\n\nfunction _savePartialEvent(auth, event) {\n  return storage()._set(persistenceKey(auth), event);\n}\nfunction _getAndRemoveEvent(_x9) {\n  return _getAndRemoveEvent2.apply(this, arguments);\n}\nfunction _getAndRemoveEvent2() {\n  _getAndRemoveEvent2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(auth) {\n    var event;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return storage()._get(persistenceKey(auth));\n        case 2:\n          event = _context11.sent;\n          if (!event) {\n            _context11.next = 6;\n            break;\n          }\n          _context11.next = 6;\n          return storage()._remove(persistenceKey(auth));\n        case 6:\n          return _context11.abrupt(\"return\", event);\n        case 7:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11);\n  }));\n  return _getAndRemoveEvent2.apply(this, arguments);\n}\nfunction _eventFromPartialAndUrl(partialEvent, url) {\n  var _a, _b;\n  // Parse the deep link within the dynamic link URL.\n  var callbackUrl = _getDeepLinkFromCallback(url);\n  // Confirm it is actually a callback URL.\n  // Currently the universal link will be of this format:\n  // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\n  // This is a fake URL but is not intended to take the user anywhere\n  // and just redirect to the app.\n  if (callbackUrl.includes('/__/auth/callback')) {\n    // Check if there is an error in the URL.\n    // This mechanism is also used to pass errors back to the app:\n    // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\n    var params = searchParamsOrEmpty(callbackUrl);\n    // Get the error object corresponding to the stringified error if found.\n    var errorObject = params['firebaseError'] ? parseJsonOrNull(decodeURIComponent(params['firebaseError'])) : null;\n    var code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];\n    var error = code ? _createError(code) : null;\n    if (error) {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        error: error,\n        urlResponse: null,\n        sessionId: null,\n        postBody: null\n      };\n    } else {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        sessionId: partialEvent.sessionId,\n        urlResponse: callbackUrl,\n        postBody: null\n      };\n    }\n  }\n  return null;\n}\nfunction generateSessionId() {\n  var chars = [];\n  var allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  for (var i = 0; i < SESSION_ID_LENGTH; i++) {\n    var idx = Math.floor(Math.random() * allowedChars.length);\n    chars.push(allowedChars.charAt(idx));\n  }\n  return chars.join('');\n}\nfunction storage() {\n  return _getInstance(browserLocalPersistence);\n}\nfunction persistenceKey(auth) {\n  return _persistenceKeyName(\"authEvent\" /* KeyName.AUTH_EVENT */, auth.config.apiKey, auth.name);\n}\nfunction parseJsonOrNull(json) {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n}\n// Exported for testing\nfunction _getDeepLinkFromCallback(url) {\n  var params = searchParamsOrEmpty(url);\n  var link = params['link'] ? decodeURIComponent(params['link']) : undefined;\n  // Double link case (automatic redirect)\n  var doubleDeepLink = searchParamsOrEmpty(link)['link'];\n  // iOS custom scheme links.\n  var iOSDeepLink = params['deep_link_id'] ? decodeURIComponent(params['deep_link_id']) : undefined;\n  var iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n/**\r\n * Optimistically tries to get search params from a string, or else returns an\r\n * empty search params object.\r\n */\nfunction searchParamsOrEmpty(url) {\n  if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {\n    return {};\n  }\n  var _url$split = url.split('?'),\n    _url$split2 = _toArray(_url$split),\n    _ = _url$split2[0],\n    rest = _url$split2.slice(1);\n  return querystringDecode(rest.join('?'));\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * How long to wait for the initial auth event before concluding no\r\n * redirect pending\r\n */\nvar INITIAL_EVENT_TIMEOUT_MS = 500;\nvar CordovaPopupRedirectResolver = /*#__PURE__*/function () {\n  function CordovaPopupRedirectResolver() {\n    _classCallCheck(this, CordovaPopupRedirectResolver);\n    this._redirectPersistence = browserSessionPersistence;\n    this._shouldInitProactively = true; // This is lightweight for Cordova\n    this.eventManagers = new Map();\n    this.originValidationPromises = {};\n    this._completeRedirectFn = _getRedirectResult;\n    this._overrideRedirectResult = _overrideRedirectResult;\n  }\n  _createClass(CordovaPopupRedirectResolver, [{\n    key: \"_initialize\",\n    value: function () {\n      var _initialize2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(auth) {\n        var key, manager;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              key = auth._key();\n              manager = this.eventManagers.get(key);\n              if (!manager) {\n                manager = new CordovaAuthEventManager(auth);\n                this.eventManagers.set(key, manager);\n                this.attachCallbackListeners(auth, manager);\n              }\n              return _context2.abrupt(\"return\", manager);\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function _initialize(_x10) {\n        return _initialize2.apply(this, arguments);\n      }\n      return _initialize;\n    }()\n  }, {\n    key: \"_openPopup\",\n    value: function _openPopup(auth) {\n      _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\n    }\n  }, {\n    key: \"_openRedirect\",\n    value: function () {\n      var _openRedirect2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(auth, provider, authType, eventId) {\n        var manager, event, url, iabRef;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _checkCordovaConfiguration(auth);\n              _context3.next = 3;\n              return this._initialize(auth);\n            case 3:\n              manager = _context3.sent;\n              _context3.next = 6;\n              return manager.initialized();\n            case 6:\n              // Reset the persisted redirect states. This does not matter on Web where\n              // the redirect always blows away application state entirely. On Cordova,\n              // the app maintains control flow through the redirect.\n              manager.resetRedirect();\n              _clearRedirectOutcomes();\n              _context3.next = 10;\n              return this._originValidation(auth);\n            case 10:\n              event = _generateNewEvent(auth, authType, eventId);\n              _context3.next = 13;\n              return _savePartialEvent(auth, event);\n            case 13:\n              _context3.next = 15;\n              return _generateHandlerUrl(auth, event, provider);\n            case 15:\n              url = _context3.sent;\n              _context3.next = 18;\n              return _performRedirect(url);\n            case 18:\n              iabRef = _context3.sent;\n              return _context3.abrupt(\"return\", _waitForAppResume(auth, manager, iabRef));\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function _openRedirect(_x11, _x12, _x13, _x14) {\n        return _openRedirect2.apply(this, arguments);\n      }\n      return _openRedirect;\n    }()\n  }, {\n    key: \"_isIframeWebStorageSupported\",\n    value: function _isIframeWebStorageSupported(_auth, _cb) {\n      throw new Error('Method not implemented.');\n    }\n  }, {\n    key: \"_originValidation\",\n    value: function _originValidation(auth) {\n      var key = auth._key();\n      if (!this.originValidationPromises[key]) {\n        this.originValidationPromises[key] = _validateOrigin(auth);\n      }\n      return this.originValidationPromises[key];\n    }\n  }, {\n    key: \"attachCallbackListeners\",\n    value: function attachCallbackListeners(auth, manager) {\n      // Get the global plugins\n      var _cordovaWindow3 = _cordovaWindow(),\n        universalLinks = _cordovaWindow3.universalLinks,\n        handleOpenURL = _cordovaWindow3.handleOpenURL,\n        BuildInfo = _cordovaWindow3.BuildInfo;\n      var noEventTimeout = setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _getAndRemoveEvent(auth);\n            case 2:\n              manager.onEvent(generateNoEvent());\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      })), INITIAL_EVENT_TIMEOUT_MS);\n      var universalLinksCb = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(eventData) {\n          var partialEvent, finalEvent;\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                // We have an event so we can clear the no event timeout\n                clearTimeout(noEventTimeout);\n                _context5.next = 3;\n                return _getAndRemoveEvent(auth);\n              case 3:\n                partialEvent = _context5.sent;\n                finalEvent = null;\n                if (partialEvent && (eventData === null || eventData === void 0 ? void 0 : eventData['url'])) {\n                  finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\n                }\n                // If finalEvent is never filled, trigger with no event\n                manager.onEvent(finalEvent || generateNoEvent());\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5);\n        }));\n        return function universalLinksCb(_x15) {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n      // Universal links subscriber doesn't exist for iOS, so we need to check\n      if (typeof universalLinks !== 'undefined' && typeof universalLinks.subscribe === 'function') {\n        universalLinks.subscribe(null, universalLinksCb);\n      }\n      // iOS 7 or 8 custom URL schemes.\n      // This is also the current default behavior for iOS 9+.\n      // For this to work, cordova-plugin-customurlscheme needs to be installed.\n      // https://github.com/EddyVerbruggen/Custom-URL-scheme\n      // Do not overwrite the existing developer's URL handler.\n      var existingHandleOpenURL = handleOpenURL;\n      var packagePrefix = \"\".concat(BuildInfo.packageName.toLowerCase(), \"://\");\n      _cordovaWindow().handleOpenURL = /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(url) {\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                if (url.toLowerCase().startsWith(packagePrefix)) {\n                  // We want this intentionally to float\n                  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                  universalLinksCb({\n                    url: url\n                  });\n                }\n                // Call the developer's handler if it is present.\n                if (typeof existingHandleOpenURL === 'function') {\n                  try {\n                    existingHandleOpenURL(url);\n                  } catch (e) {\n                    // This is a developer error. Don't stop the flow of the SDK.\n                    console.error(e);\n                  }\n                }\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6);\n        }));\n        return function (_x16) {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n    }\n  }]);\n  return CordovaPopupRedirectResolver;\n}();\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\r\n * based applications.\r\n *\r\n * @public\r\n */\nvar cordovaPopupRedirectResolver = CordovaPopupRedirectResolver;\nfunction generateNoEvent() {\n  return {\n    type: \"unknown\" /* AuthEventType.UNKNOWN */,\n    eventId: null,\n    sessionId: null,\n    urlResponse: null,\n    postBody: null,\n    tenantId: null,\n    error: _createError(\"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\n// of autogenerated documentation pages to reduce accidental misuse.\nfunction addFrameworkForLogging(auth, framework) {\n  _castAuth(auth)._logFramework(framework);\n}\nexport { addFrameworkForLogging, cordovaPopupRedirectResolver };","map":{"version":3,"names":["_cordovaWindow","window","REDIRECT_TIMEOUT_MS","_generateHandlerUrl","_x","_x2","_x3","_generateHandlerUrl2","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee7","auth","event","provider","_a","_cordovaWindow4","BuildInfo","sessionDigest","additionalParams","wrap","_callee7$","_context7","prev","next","debugAssert","sessionId","computeSha256","sent","_isIOS","packageName","_isAndroid","_fail","displayName","abrupt","_getRedirectUrl","type","undefined","eventId","stop","_validateOrigin","_x4","_validateOrigin2","_callee8","_cordovaWindow5","request","_callee8$","_context8","iosBundleId","androidPackageName","_getProjectConfig","_performRedirect","handlerUrl","_cordovaWindow2","cordova","Promise","resolve","plugins","browsertab","isAvailable","browserTabIsAvailable","iabRef","openUrl","InAppBrowser","open","_isIOS7Or8","_waitForAppResume","_x5","_x6","_x7","_waitForAppResume2","_callee9","eventListener","_cordovaWindow6","cleanup","_callee9$","_context9","reject","onCloseTimer","authEventSeen","closeBrowserTab","close","resumed","setTimeout","_createError","visibilityChanged","document","visibilityState","addPassiveListener","addEventListener","removePassiveListener","removeEventListener","clearTimeout","finish","_checkCordovaConfiguration","win","_assert","universalLinks","subscribe","missingPlugin","_b","_e","_d","_c","_h","_g","_f","_k","_j","_x8","_computeSha","_callee10","bytes","buf","arr","_callee10$","_context10","stringToArrayBuffer","crypto","subtle","digest","Array","from","Uint8Array","map","num","toString","padStart","join","str","test","TextEncoder","encode","buff","ArrayBuffer","length","view","i","charCodeAt","SESSION_ID_LENGTH","CordovaAuthEventManager","_AuthEventManager","_inherits","_super","_createSuper","_this","_classCallCheck","passiveListeners","Set","initPromise","resolveInialized","_createClass","key","value","cb","add","delete","resetRedirect","queuedRedirectEvent","hasHandledPotentialRedirect","onEvent","forEach","_get","_getPrototypeOf","prototype","call","_initialized","_callee","_callee$","_context","initialized","AuthEventManager","_generateNewEvent","urlResponse","generateSessionId","postBody","tenantId","error","_savePartialEvent","storage","_set","persistenceKey","_getAndRemoveEvent","_x9","_getAndRemoveEvent2","_callee11","_callee11$","_context11","_remove","_eventFromPartialAndUrl","partialEvent","url","callbackUrl","_getDeepLinkFromCallback","includes","params","searchParamsOrEmpty","errorObject","parseJsonOrNull","decodeURIComponent","code","split","chars","allowedChars","idx","Math","floor","random","push","charAt","_getInstance","browserLocalPersistence","_persistenceKeyName","config","apiKey","name","json","JSON","parse","e","link","doubleDeepLink","iOSDeepLink","iOSDoubleDeepLink","_url$split","_url$split2","_toArray","_","rest","slice","querystringDecode","INITIAL_EVENT_TIMEOUT_MS","CordovaPopupRedirectResolver","_redirectPersistence","browserSessionPersistence","_shouldInitProactively","eventManagers","Map","originValidationPromises","_completeRedirectFn","_getRedirectResult","_overrideRedirectResult","_initialize2","_callee2","manager","_callee2$","_context2","_key","get","set","attachCallbackListeners","_initialize","_x10","_openPopup","_openRedirect2","_callee3","authType","_callee3$","_context3","_clearRedirectOutcomes","_originValidation","_openRedirect","_x11","_x12","_x13","_x14","_isIframeWebStorageSupported","_auth","_cb","Error","_cordovaWindow3","handleOpenURL","noEventTimeout","_callee4","_callee4$","_context4","generateNoEvent","universalLinksCb","_ref2","_callee5","eventData","finalEvent","_callee5$","_context5","_x15","existingHandleOpenURL","packagePrefix","concat","toLowerCase","_ref3","_callee6","_callee6$","_context6","startsWith","console","_x16","cordovaPopupRedirectResolver","addFrameworkForLogging","framework","_castAuth","_logFramework"],"sources":["/Users/thienantran/Downloads/chatter/node_modules/@firebase/auth/src/platform_cordova/plugins.ts","/Users/thienantran/Downloads/chatter/node_modules/@firebase/auth/src/platform_cordova/popup_redirect/utils.ts","/Users/thienantran/Downloads/chatter/node_modules/@firebase/auth/src/platform_cordova/popup_redirect/events.ts","/Users/thienantran/Downloads/chatter/node_modules/@firebase/auth/src/platform_cordova/popup_redirect/popup_redirect.ts","/Users/thienantran/Downloads/chatter/node_modules/@firebase/auth/internal/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface CordovaWindow extends Window {\n  cordova: {\n    plugins: {\n      browsertab: {\n        isAvailable(cb: (available: boolean) => void): void;\n        openUrl(url: string): void;\n        close(): void;\n      };\n    };\n\n    InAppBrowser: {\n      open(url: string, target: string, options: string): InAppBrowserRef;\n    };\n  };\n\n  universalLinks: {\n    subscribe(\n      n: null,\n      cb: (event: Record<string, string> | null) => void\n    ): void;\n  };\n\n  BuildInfo: {\n    readonly packageName: string;\n    readonly displayName: string;\n  };\n\n  handleOpenURL(url: string): void;\n}\n\nexport interface InAppBrowserRef {\n  close?: () => void;\n}\n\nexport function _cordovaWindow(): CordovaWindow {\n  return window as unknown as CordovaWindow;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider } from '../../model/public_types';\nimport { AuthErrorCode } from '../../core/errors';\nimport {\n  debugAssert,\n  _assert,\n  _createError,\n  _fail\n} from '../../core/util/assert';\nimport { _isAndroid, _isIOS, _isIOS7Or8 } from '../../core/util/browser';\nimport { _getRedirectUrl } from '../../core/util/handler';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthEvent } from '../../model/popup_redirect';\nimport { InAppBrowserRef, _cordovaWindow } from '../plugins';\nimport {\n  GetProjectConfigRequest,\n  _getProjectConfig\n} from '../../api/project_config/get_project_config';\n\n/**\n * How long to wait after the app comes back into focus before concluding that\n * the user closed the sign in tab.\n */\nconst REDIRECT_TIMEOUT_MS = 2000;\n\n/**\n * Generates the URL for the OAuth handler.\n */\nexport async function _generateHandlerUrl(\n  auth: AuthInternal,\n  event: AuthEvent,\n  provider: AuthProvider\n): Promise<string> {\n  // Get the cordova plugins\n  const { BuildInfo } = _cordovaWindow();\n  debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\n  const sessionDigest = await computeSha256(event.sessionId);\n\n  const additionalParams: Record<string, string> = {};\n  if (_isIOS()) {\n    // iOS app identifier\n    additionalParams['ibi'] = BuildInfo.packageName;\n  } else if (_isAndroid()) {\n    // Android app identifier\n    additionalParams['apn'] = BuildInfo.packageName;\n  } else {\n    _fail(auth, AuthErrorCode.OPERATION_NOT_SUPPORTED);\n  }\n\n  // Add the display name if available\n  if (BuildInfo.displayName) {\n    additionalParams['appDisplayName'] = BuildInfo.displayName;\n  }\n\n  // Attached the hashed session ID\n  additionalParams['sessionId'] = sessionDigest;\n  return _getRedirectUrl(\n    auth,\n    provider,\n    event.type,\n    undefined,\n    event.eventId ?? undefined,\n    additionalParams\n  );\n}\n\n/**\n * Validates that this app is valid for this project configuration\n */\nexport async function _validateOrigin(auth: AuthInternal): Promise<void> {\n  const { BuildInfo } = _cordovaWindow();\n  const request: GetProjectConfigRequest = {};\n  if (_isIOS()) {\n    request.iosBundleId = BuildInfo.packageName;\n  } else if (_isAndroid()) {\n    request.androidPackageName = BuildInfo.packageName;\n  } else {\n    _fail(auth, AuthErrorCode.OPERATION_NOT_SUPPORTED);\n  }\n\n  // Will fail automatically if package name is not authorized\n  await _getProjectConfig(auth, request);\n}\n\nexport function _performRedirect(\n  handlerUrl: string\n): Promise<InAppBrowserRef | null> {\n  // Get the cordova plugins\n  const { cordova } = _cordovaWindow();\n\n  return new Promise(resolve => {\n    cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\n      let iabRef: InAppBrowserRef | null = null;\n      if (browserTabIsAvailable) {\n        cordova.plugins.browsertab.openUrl(handlerUrl);\n      } else {\n        // TODO: Return the inappbrowser ref that's returned from the open call\n        iabRef = cordova.InAppBrowser.open(\n          handlerUrl,\n          _isIOS7Or8() ? '_blank' : '_system',\n          'location=yes'\n        );\n      }\n      resolve(iabRef);\n    });\n  });\n}\n\n// Thin interface wrapper to avoid circular dependency with ./events module\ninterface PassiveAuthEventListener {\n  addPassiveListener(cb: () => void): void;\n  removePassiveListener(cb: () => void): void;\n}\n\n/**\n * This function waits for app activity to be seen before resolving. It does\n * this by attaching listeners to various dom events. Once the app is determined\n * to be visible, this promise resolves. AFTER that resolution, the listeners\n * are detached and any browser tabs left open will be closed.\n */\nexport async function _waitForAppResume(\n  auth: AuthInternal,\n  eventListener: PassiveAuthEventListener,\n  iabRef: InAppBrowserRef | null\n): Promise<void> {\n  // Get the cordova plugins\n  const { cordova } = _cordovaWindow();\n\n  let cleanup = (): void => {};\n  try {\n    await new Promise<void>((resolve, reject) => {\n      let onCloseTimer: number | null = null;\n\n      // DEFINE ALL THE CALLBACKS =====\n      function authEventSeen(): void {\n        // Auth event was detected. Resolve this promise and close the extra\n        // window if it's still open.\n        resolve();\n        const closeBrowserTab = cordova.plugins.browsertab?.close;\n        if (typeof closeBrowserTab === 'function') {\n          closeBrowserTab();\n        }\n        // Close inappbrowser emebedded webview in iOS7 and 8 case if still\n        // open.\n        if (typeof iabRef?.close === 'function') {\n          iabRef.close();\n        }\n      }\n\n      function resumed(): void {\n        if (onCloseTimer) {\n          // This code already ran; do not rerun.\n          return;\n        }\n\n        onCloseTimer = window.setTimeout(() => {\n          // Wait two seeconds after resume then reject.\n          reject(_createError(auth, AuthErrorCode.REDIRECT_CANCELLED_BY_USER));\n        }, REDIRECT_TIMEOUT_MS);\n      }\n\n      function visibilityChanged(): void {\n        if (document?.visibilityState === 'visible') {\n          resumed();\n        }\n      }\n\n      // ATTACH ALL THE LISTENERS =====\n      // Listen for the auth event\n      eventListener.addPassiveListener(authEventSeen);\n\n      // Listen for resume and visibility events\n      document.addEventListener('resume', resumed, false);\n      if (_isAndroid()) {\n        document.addEventListener('visibilitychange', visibilityChanged, false);\n      }\n\n      // SETUP THE CLEANUP FUNCTION =====\n      cleanup = () => {\n        eventListener.removePassiveListener(authEventSeen);\n        document.removeEventListener('resume', resumed, false);\n        document.removeEventListener(\n          'visibilitychange',\n          visibilityChanged,\n          false\n        );\n        if (onCloseTimer) {\n          window.clearTimeout(onCloseTimer);\n        }\n      };\n    });\n  } finally {\n    cleanup();\n  }\n}\n\n/**\n * Checks the configuration of the Cordova environment. This has no side effect\n * if the configuration is correct; otherwise it throws an error with the\n * missing plugin.\n */\nexport function _checkCordovaConfiguration(auth: AuthInternal): void {\n  const win = _cordovaWindow();\n  // Check all dependencies installed.\n  // https://github.com/nordnet/cordova-universal-links-plugin\n  // Note that cordova-universal-links-plugin has been abandoned.\n  // A fork with latest fixes is available at:\n  // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\n  _assert(\n    typeof win?.universalLinks?.subscribe === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-universal-links-plugin-fix'\n    }\n  );\n\n  // https://www.npmjs.com/package/cordova-plugin-buildinfo\n  _assert(\n    typeof win?.BuildInfo?.packageName !== 'undefined',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-buildInfo'\n    }\n  );\n\n  // https://github.com/google/cordova-plugin-browsertab\n  _assert(\n    typeof win?.cordova?.plugins?.browsertab?.openUrl === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-browsertab'\n    }\n  );\n  _assert(\n    typeof win?.cordova?.plugins?.browsertab?.isAvailable === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-browsertab'\n    }\n  );\n\n  // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\n  _assert(\n    typeof win?.cordova?.InAppBrowser?.open === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-inappbrowser'\n    }\n  );\n}\n\n/**\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\n * protocol).\n */\nasync function computeSha256(sessionId: string): Promise<string> {\n  const bytes = stringToArrayBuffer(sessionId);\n\n  // TODO: For IE11 crypto has a different name and this operation comes back\n  //       as an object, not a promise. This is the old proposed standard that\n  //       is used by IE11:\n  // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\n  const buf = await crypto.subtle.digest('SHA-256', bytes);\n  const arr = Array.from(new Uint8Array(buf));\n  return arr.map(num => num.toString(16).padStart(2, '0')).join('');\n}\n\nfunction stringToArrayBuffer(str: string): Uint8Array {\n  // This function is only meant to deal with an ASCII charset and makes\n  // certain simplifying assumptions.\n  debugAssert(\n    /[0-9a-zA-Z]+/.test(str),\n    'Can only convert alpha-numeric strings'\n  );\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder().encode(str);\n  }\n\n  const buff = new ArrayBuffer(str.length);\n  const view = new Uint8Array(buff);\n  for (let i = 0; i < str.length; i++) {\n    view[i] = str.charCodeAt(i);\n  }\n  return view;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystringDecode } from '@firebase/util';\nimport { AuthEventManager } from '../../core/auth/auth_event_manager';\nimport { AuthErrorCode } from '../../core/errors';\nimport { PersistedBlob, PersistenceInternal } from '../../core/persistence';\nimport {\n  KeyName,\n  _persistenceKeyName\n} from '../../core/persistence/persistence_user_manager';\nimport { _createError } from '../../core/util/assert';\nimport { _getInstance } from '../../core/util/instantiator';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthEvent, AuthEventType } from '../../model/popup_redirect';\nimport { browserLocalPersistence } from '../../platform_browser/persistence/local_storage';\n\nconst SESSION_ID_LENGTH = 20;\n\n/** Custom AuthEventManager that adds passive listeners to events */\nexport class CordovaAuthEventManager extends AuthEventManager {\n  private readonly passiveListeners = new Set<(e: AuthEvent) => void>();\n  private resolveInialized!: () => void;\n  private initPromise = new Promise<void>(resolve => {\n    this.resolveInialized = resolve;\n  });\n\n  addPassiveListener(cb: (e: AuthEvent) => void): void {\n    this.passiveListeners.add(cb);\n  }\n\n  removePassiveListener(cb: (e: AuthEvent) => void): void {\n    this.passiveListeners.delete(cb);\n  }\n\n  // In a Cordova environment, this manager can live through multiple redirect\n  // operations\n  resetRedirect(): void {\n    this.queuedRedirectEvent = null;\n    this.hasHandledPotentialRedirect = false;\n  }\n\n  /** Override the onEvent method */\n  onEvent(event: AuthEvent): boolean {\n    this.resolveInialized();\n    this.passiveListeners.forEach(cb => cb(event));\n    return super.onEvent(event);\n  }\n\n  async initialized(): Promise<void> {\n    await this.initPromise;\n  }\n}\n\n/**\n * Generates a (partial) {@link AuthEvent}.\n */\nexport function _generateNewEvent(\n  auth: AuthInternal,\n  type: AuthEventType,\n  eventId: string | null = null\n): AuthEvent {\n  return {\n    type,\n    eventId,\n    urlResponse: null,\n    sessionId: generateSessionId(),\n    postBody: null,\n    tenantId: auth.tenantId,\n    error: _createError(auth, AuthErrorCode.NO_AUTH_EVENT)\n  };\n}\n\nexport function _savePartialEvent(\n  auth: AuthInternal,\n  event: AuthEvent\n): Promise<void> {\n  return storage()._set(persistenceKey(auth), event as object as PersistedBlob);\n}\n\nexport async function _getAndRemoveEvent(\n  auth: AuthInternal\n): Promise<AuthEvent | null> {\n  const event = (await storage()._get(\n    persistenceKey(auth)\n  )) as AuthEvent | null;\n  if (event) {\n    await storage()._remove(persistenceKey(auth));\n  }\n  return event;\n}\n\nexport function _eventFromPartialAndUrl(\n  partialEvent: AuthEvent,\n  url: string\n): AuthEvent | null {\n  // Parse the deep link within the dynamic link URL.\n  const callbackUrl = _getDeepLinkFromCallback(url);\n  // Confirm it is actually a callback URL.\n  // Currently the universal link will be of this format:\n  // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\n  // This is a fake URL but is not intended to take the user anywhere\n  // and just redirect to the app.\n  if (callbackUrl.includes('/__/auth/callback')) {\n    // Check if there is an error in the URL.\n    // This mechanism is also used to pass errors back to the app:\n    // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\n    const params = searchParamsOrEmpty(callbackUrl);\n    // Get the error object corresponding to the stringified error if found.\n    const errorObject = params['firebaseError']\n      ? parseJsonOrNull(decodeURIComponent(params['firebaseError']))\n      : null;\n    const code = errorObject?.['code']?.split('auth/')?.[1];\n    const error = code ? _createError(code) : null;\n    if (error) {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        error,\n        urlResponse: null,\n        sessionId: null,\n        postBody: null\n      };\n    } else {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        sessionId: partialEvent.sessionId,\n        urlResponse: callbackUrl,\n        postBody: null\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction generateSessionId(): string {\n  const chars = [];\n  const allowedChars =\n    '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  for (let i = 0; i < SESSION_ID_LENGTH; i++) {\n    const idx = Math.floor(Math.random() * allowedChars.length);\n    chars.push(allowedChars.charAt(idx));\n  }\n  return chars.join('');\n}\n\nfunction storage(): PersistenceInternal {\n  return _getInstance(browserLocalPersistence);\n}\n\nfunction persistenceKey(auth: AuthInternal): string {\n  return _persistenceKeyName(KeyName.AUTH_EVENT, auth.config.apiKey, auth.name);\n}\n\nfunction parseJsonOrNull(json: string): ReturnType<typeof JSON.parse> | null {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n}\n\n// Exported for testing\nexport function _getDeepLinkFromCallback(url: string): string {\n  const params = searchParamsOrEmpty(url);\n  const link = params['link'] ? decodeURIComponent(params['link']) : undefined;\n  // Double link case (automatic redirect)\n  const doubleDeepLink = searchParamsOrEmpty(link)['link'];\n  // iOS custom scheme links.\n  const iOSDeepLink = params['deep_link_id']\n    ? decodeURIComponent(params['deep_link_id'])\n    : undefined;\n  const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n\n/**\n * Optimistically tries to get search params from a string, or else returns an\n * empty search params object.\n */\nfunction searchParamsOrEmpty(url: string | undefined): Record<string, string> {\n  if (!url?.includes('?')) {\n    return {};\n  }\n\n  const [_, ...rest] = url.split('?');\n  return querystringDecode(rest.join('?')) as Record<string, string>;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, PopupRedirectResolver } from '../../model/public_types';\nimport { browserSessionPersistence } from '../../platform_browser/persistence/session_storage';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEvent,\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { AuthPopup } from '../../platform_browser/util/popup';\nimport { _createError, _fail } from '../../core/util/assert';\nimport { AuthErrorCode } from '../../core/errors';\nimport {\n  _checkCordovaConfiguration,\n  _generateHandlerUrl,\n  _performRedirect,\n  _validateOrigin,\n  _waitForAppResume\n} from './utils';\nimport {\n  CordovaAuthEventManager,\n  _eventFromPartialAndUrl,\n  _generateNewEvent,\n  _getAndRemoveEvent,\n  _savePartialEvent\n} from './events';\nimport { AuthEventManager } from '../../core/auth/auth_event_manager';\nimport { _getRedirectResult } from '../../platform_browser/strategies/redirect';\nimport {\n  _clearRedirectOutcomes,\n  _overrideRedirectResult\n} from '../../core/strategies/redirect';\nimport { _cordovaWindow } from '../plugins';\n\n/**\n * How long to wait for the initial auth event before concluding no\n * redirect pending\n */\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\n\nclass CordovaPopupRedirectResolver implements PopupRedirectResolverInternal {\n  readonly _redirectPersistence = browserSessionPersistence;\n  readonly _shouldInitProactively = true; // This is lightweight for Cordova\n  private readonly eventManagers = new Map<string, CordovaAuthEventManager>();\n  private readonly originValidationPromises: Record<string, Promise<void>> = {};\n\n  _completeRedirectFn = _getRedirectResult;\n  _overrideRedirectResult = _overrideRedirectResult;\n\n  async _initialize(auth: AuthInternal): Promise<CordovaAuthEventManager> {\n    const key = auth._key();\n    let manager = this.eventManagers.get(key);\n    if (!manager) {\n      manager = new CordovaAuthEventManager(auth);\n      this.eventManagers.set(key, manager);\n      this.attachCallbackListeners(auth, manager);\n    }\n    return manager;\n  }\n\n  _openPopup(auth: AuthInternal): Promise<AuthPopup> {\n    _fail(auth, AuthErrorCode.OPERATION_NOT_SUPPORTED);\n  }\n\n  async _openRedirect(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<void> {\n    _checkCordovaConfiguration(auth);\n    const manager = await this._initialize(auth);\n    await manager.initialized();\n\n    // Reset the persisted redirect states. This does not matter on Web where\n    // the redirect always blows away application state entirely. On Cordova,\n    // the app maintains control flow through the redirect.\n    manager.resetRedirect();\n    _clearRedirectOutcomes();\n\n    await this._originValidation(auth);\n\n    const event = _generateNewEvent(auth, authType, eventId);\n    await _savePartialEvent(auth, event);\n    const url = await _generateHandlerUrl(auth, event, provider);\n    const iabRef = await _performRedirect(url);\n    return _waitForAppResume(auth, manager, iabRef);\n  }\n\n  _isIframeWebStorageSupported(\n    _auth: AuthInternal,\n    _cb: (support: boolean) => unknown\n  ): void {\n    throw new Error('Method not implemented.');\n  }\n\n  _originValidation(auth: AuthInternal): Promise<void> {\n    const key = auth._key();\n    if (!this.originValidationPromises[key]) {\n      this.originValidationPromises[key] = _validateOrigin(auth);\n    }\n\n    return this.originValidationPromises[key];\n  }\n\n  private attachCallbackListeners(\n    auth: AuthInternal,\n    manager: AuthEventManager\n  ): void {\n    // Get the global plugins\n    const { universalLinks, handleOpenURL, BuildInfo } = _cordovaWindow();\n\n    const noEventTimeout = setTimeout(async () => {\n      // We didn't see that initial event. Clear any pending object and\n      // dispatch no event\n      await _getAndRemoveEvent(auth);\n      manager.onEvent(generateNoEvent());\n    }, INITIAL_EVENT_TIMEOUT_MS);\n\n    const universalLinksCb = async (\n      eventData: Record<string, string> | null\n    ): Promise<void> => {\n      // We have an event so we can clear the no event timeout\n      clearTimeout(noEventTimeout);\n\n      const partialEvent = await _getAndRemoveEvent(auth);\n      let finalEvent: AuthEvent | null = null;\n      if (partialEvent && eventData?.['url']) {\n        finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\n      }\n\n      // If finalEvent is never filled, trigger with no event\n      manager.onEvent(finalEvent || generateNoEvent());\n    };\n\n    // Universal links subscriber doesn't exist for iOS, so we need to check\n    if (\n      typeof universalLinks !== 'undefined' &&\n      typeof universalLinks.subscribe === 'function'\n    ) {\n      universalLinks.subscribe(null, universalLinksCb);\n    }\n\n    // iOS 7 or 8 custom URL schemes.\n    // This is also the current default behavior for iOS 9+.\n    // For this to work, cordova-plugin-customurlscheme needs to be installed.\n    // https://github.com/EddyVerbruggen/Custom-URL-scheme\n    // Do not overwrite the existing developer's URL handler.\n    const existingHandleOpenURL = handleOpenURL;\n    const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\n    _cordovaWindow().handleOpenURL = async url => {\n      if (url.toLowerCase().startsWith(packagePrefix)) {\n        // We want this intentionally to float\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        universalLinksCb({ url });\n      }\n      // Call the developer's handler if it is present.\n      if (typeof existingHandleOpenURL === 'function') {\n        try {\n          existingHandleOpenURL(url);\n        } catch (e) {\n          // This is a developer error. Don't stop the flow of the SDK.\n          console.error(e);\n        }\n      }\n    };\n  }\n}\n\n/**\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\n * based applications.\n *\n * @public\n */\nexport const cordovaPopupRedirectResolver: PopupRedirectResolver =\n  CordovaPopupRedirectResolver;\n\nfunction generateNoEvent(): AuthEvent {\n  return {\n    type: AuthEventType.UNKNOWN,\n    eventId: null,\n    sessionId: null,\n    urlResponse: null,\n    postBody: null,\n    tenantId: null,\n    error: _createError(AuthErrorCode.NO_AUTH_EVENT)\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _castAuth } from '../src/core/auth/auth_impl';\nimport { Auth } from '../src/model/public_types';\n\n/**\n * This interface is intended only for use by @firebase/auth-compat, do not use directly\n */\nexport * from '../index';\n\nexport { SignInWithIdpResponse } from '../src/api/authentication/idp';\nexport { AuthErrorCode } from '../src/core/errors';\nexport { PersistenceInternal } from '../src/core/persistence';\nexport { _persistenceKeyName } from '../src/core/persistence/persistence_user_manager';\nexport { UserImpl } from '../src/core/user/user_impl';\nexport { _getInstance } from '../src/core/util/instantiator';\nexport {\n  PopupRedirectResolverInternal,\n  EventManager,\n  AuthEventType\n} from '../src/model/popup_redirect';\nexport { UserCredentialInternal, UserParameters } from '../src/model/user';\nexport { AuthInternal, ConfigInternal } from '../src/model/auth';\nexport { DefaultConfig, AuthImpl, _castAuth } from '../src/core/auth/auth_impl';\n\nexport { ClientPlatform, _getClientVersion } from '../src/core/util/version';\n\nexport { _generateEventId } from '../src/core/util/event_id';\nexport { TaggedWithTokenResponse } from '../src/model/id_token';\nexport { _fail, _assert } from '../src/core/util/assert';\nexport { AuthPopup } from '../src/platform_browser/util/popup';\nexport { _getRedirectResult } from '../src/platform_browser/strategies/redirect';\nexport { _overrideRedirectResult } from '../src/core/strategies/redirect';\nexport { cordovaPopupRedirectResolver } from '../src/platform_cordova/popup_redirect/popup_redirect';\nexport { FetchProvider } from '../src/core/util/fetch_provider';\nexport { SAMLAuthCredential } from '../src/core/credentials/saml';\n\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\n// of autogenerated documentation pages to reduce accidental misuse.\nexport function addFrameworkForLogging(auth: Auth, framework: string): void {\n  _castAuth(auth)._logFramework(framework);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}